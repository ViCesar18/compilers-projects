NUMBER_SIGN
IDENTIFIER(include)
STRING(query.h)
IDENTIFIER(static)
INT
IDENTIFIER(_dumpBlockResidents)
L_PAREN
IDENTIFIER(RBTree)
IDENTIFIER(tree)
COMMA
IDENTIFIER(Node)
IDENTIFIER(node)
COMMA
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(file)
R_PAREN
SEMICOLON
TYPEDEF
STRUCT
IDENTIFIER(BBParameters)
L_CURLY_BRACKET
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(file)
SEMICOLON
CHAR
MULTIPLY
IDENTIFIER(color)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(BBParameters)
SEMICOLON
IDENTIFIER(static)
VOID
IDENTIFIER(insertBoundingBoxElement)
L_PAREN
VOID
MULTIPLY
IDENTIFIER(o)
COMMA
VOID
MULTIPLY
IDENTIFIER(parametersVoid)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(BBParameters)
MULTIPLY
IDENTIFIER(params)
ASSIGN
L_PAREN
IDENTIFIER(BBParameters)
MULTIPLY
R_PAREN
IDENTIFIER(parametersVoid)
SEMICOLON
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(file)
ASSIGN
IDENTIFIER(params)
POINTER
IDENTIFIER(file)
SEMICOLON
IF
L_PAREN
IDENTIFIER(Object_GetType)
L_PAREN
IDENTIFIER(o)
R_PAREN
EQUAL
IDENTIFIER(OBJ_CIRC)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(putSVGCircle)
L_PAREN
IDENTIFIER(file)
COMMA
IDENTIFIER(Object_GetContent)
L_PAREN
IDENTIFIER(o)
R_PAREN
COMMA
IDENTIFIER(Object_GetColor1)
L_PAREN
IDENTIFIER(o)
R_PAREN
COMMA
IDENTIFIER(Object_GetColor2)
L_PAREN
IDENTIFIER(o)
R_PAREN
COMMA
IDENTIFIER(Object_GetStroke)
L_PAREN
IDENTIFIER(o)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(Rectangle)
IDENTIFIER(surroundingRect)
ASSIGN
IDENTIFIER(Rectangle_Create)
L_PAREN
NUM_INTEGER(0)
COMMA
NUM_INTEGER(0)
COMMA
NUM_INTEGER(0)
COMMA
NUM_INTEGER(0)
R_PAREN
SEMICOLON
IDENTIFIER(getSurroundingRect)
L_PAREN
IDENTIFIER(o)
COMMA
IDENTIFIER(surroundingRect)
R_PAREN
SEMICOLON
IDENTIFIER(putSVGRectangle)
L_PAREN
IDENTIFIER(file)
COMMA
IDENTIFIER(surroundingRect)
COMMA
IDENTIFIER(params)
POINTER
IDENTIFIER(color)
COMMA
STRING(none)
COMMA
STRING(2)
R_PAREN
SEMICOLON
IDENTIFIER(Rectangle_Destroy)
L_PAREN
IDENTIFIER(surroundingRect)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
ELSE
IF
L_PAREN
IDENTIFIER(Object_GetType)
L_PAREN
IDENTIFIER(o)
R_PAREN
EQUAL
IDENTIFIER(OBJ_RECT)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(putSVGRectangle)
L_PAREN
IDENTIFIER(file)
COMMA
IDENTIFIER(Object_GetContent)
L_PAREN
IDENTIFIER(o)
R_PAREN
COMMA
IDENTIFIER(Object_GetColor1)
L_PAREN
IDENTIFIER(o)
R_PAREN
COMMA
IDENTIFIER(Object_GetColor2)
L_PAREN
IDENTIFIER(o)
R_PAREN
COMMA
IDENTIFIER(Object_GetStroke)
L_PAREN
IDENTIFIER(o)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(Rectangle)
IDENTIFIER(rect)
ASSIGN
IDENTIFIER(Object_GetContent)
L_PAREN
IDENTIFIER(o)
R_PAREN
SEMICOLON
IDENTIFIER(double)
IDENTIFIER(cx)
COMMA
IDENTIFIER(cy)
SEMICOLON
IDENTIFIER(getCenter)
L_PAREN
IDENTIFIER(o)
COMMA
BITWISE_AND
IDENTIFIER(cx)
COMMA
BITWISE_AND
IDENTIFIER(cy)
R_PAREN
SEMICOLON
IDENTIFIER(double)
IDENTIFIER(rx)
ASSIGN
IDENTIFIER(Rectangle_GetWidth)
L_PAREN
IDENTIFIER(rect)
R_PAREN
DIV
NUM_INTEGER(2)
COMMA
IDENTIFIER(ry)
ASSIGN
IDENTIFIER(Rectangle_GetHeight)
L_PAREN
IDENTIFIER(rect)
R_PAREN
DIV
NUM_INTEGER(2)
SEMICOLON
IDENTIFIER(putSVGEllipse)
L_PAREN
IDENTIFIER(file)
COMMA
IDENTIFIER(cx)
COMMA
IDENTIFIER(cy)
COMMA
IDENTIFIER(rx)
COMMA
IDENTIFIER(ry)
COMMA
IDENTIFIER(params)
POINTER
IDENTIFIER(color)
COMMA
STRING(none)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
R_CURLY_BRACKET
IDENTIFIER(static)
IDENTIFIER(bool)
IDENTIFIER(blockInDistanceL1)
L_PAREN
VOID
MULTIPLY
IDENTIFIER(block)
COMMA
VOID
MULTIPLY
IDENTIFIER(dVoid)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(double)
MULTIPLY
IDENTIFIER(d)
ASSIGN
L_PAREN
IDENTIFIER(double)
MULTIPLY
R_PAREN
IDENTIFIER(dVoid)
SEMICOLON
IDENTIFIER(bool)
IDENTIFIER(topLeftCornerInside)
ASSIGN
IDENTIFIER(manhattanDistance)
L_PAREN
IDENTIFIER(d)
L_SQUARE_BRACKET
NUM_INTEGER(0)
R_SQUARE_BRACKET
COMMA
IDENTIFIER(d)
L_SQUARE_BRACKET
NUM_INTEGER(1)
R_SQUARE_BRACKET
COMMA
IDENTIFIER(Block_GetX)
L_PAREN
IDENTIFIER(block)
R_PAREN
COMMA
IDENTIFIER(Block_GetY)
L_PAREN
IDENTIFIER(block)
R_PAREN
R_PAREN
LESS_EQUAL
IDENTIFIER(d)
L_SQUARE_BRACKET
NUM_INTEGER(2)
R_SQUARE_BRACKET
SEMICOLON
IDENTIFIER(bool)
IDENTIFIER(topRightCornerInside)
ASSIGN
IDENTIFIER(manhattanDistance)
L_PAREN
IDENTIFIER(d)
L_SQUARE_BRACKET
NUM_INTEGER(0)
R_SQUARE_BRACKET
COMMA
IDENTIFIER(d)
L_SQUARE_BRACKET
NUM_INTEGER(1)
R_SQUARE_BRACKET
COMMA
IDENTIFIER(Block_GetX)
L_PAREN
IDENTIFIER(block)
R_PAREN
PLUS
IDENTIFIER(Block_GetW)
L_PAREN
IDENTIFIER(block)
R_PAREN
COMMA
IDENTIFIER(Block_GetY)
L_PAREN
IDENTIFIER(block)
R_PAREN
R_PAREN
LESS_EQUAL
IDENTIFIER(d)
L_SQUARE_BRACKET
NUM_INTEGER(2)
R_SQUARE_BRACKET
SEMICOLON
IDENTIFIER(bool)
IDENTIFIER(bottomLeftCornerInside)
ASSIGN
IDENTIFIER(manhattanDistance)
L_PAREN
IDENTIFIER(d)
L_SQUARE_BRACKET
NUM_INTEGER(0)
R_SQUARE_BRACKET
COMMA
IDENTIFIER(d)
L_SQUARE_BRACKET
NUM_INTEGER(1)
R_SQUARE_BRACKET
COMMA
IDENTIFIER(Block_GetX)
L_PAREN
IDENTIFIER(block)
R_PAREN
COMMA
IDENTIFIER(Block_GetY)
L_PAREN
IDENTIFIER(block)
R_PAREN
PLUS
IDENTIFIER(Block_GetH)
L_PAREN
IDENTIFIER(block)
R_PAREN
R_PAREN
LESS_EQUAL
IDENTIFIER(d)
L_SQUARE_BRACKET
NUM_INTEGER(2)
R_SQUARE_BRACKET
SEMICOLON
IDENTIFIER(bool)
IDENTIFIER(bottomRightCornerInside)
ASSIGN
IDENTIFIER(manhattanDistance)
L_PAREN
IDENTIFIER(d)
L_SQUARE_BRACKET
NUM_INTEGER(0)
R_SQUARE_BRACKET
COMMA
IDENTIFIER(d)
L_SQUARE_BRACKET
NUM_INTEGER(1)
R_SQUARE_BRACKET
COMMA
IDENTIFIER(Block_GetX)
L_PAREN
IDENTIFIER(block)
R_PAREN
PLUS
IDENTIFIER(Block_GetW)
L_PAREN
IDENTIFIER(block)
R_PAREN
COMMA
IDENTIFIER(Block_GetY)
L_PAREN
IDENTIFIER(block)
R_PAREN
PLUS
IDENTIFIER(Block_GetH)
L_PAREN
IDENTIFIER(block)
R_PAREN
R_PAREN
LESS_EQUAL
IDENTIFIER(d)
L_SQUARE_BRACKET
NUM_INTEGER(2)
R_SQUARE_BRACKET
SEMICOLON
RETURN
IDENTIFIER(topLeftCornerInside)
LOGICAL_AND
IDENTIFIER(topRightCornerInside)
LOGICAL_AND
IDENTIFIER(bottomLeftCornerInside)
LOGICAL_AND
IDENTIFIER(bottomRightCornerInside)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(static)
IDENTIFIER(bool)
IDENTIFIER(blockInDistanceL2)
L_PAREN
VOID
MULTIPLY
IDENTIFIER(block)
COMMA
VOID
MULTIPLY
IDENTIFIER(dVoid)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(double)
MULTIPLY
IDENTIFIER(d)
ASSIGN
L_PAREN
IDENTIFIER(double)
MULTIPLY
R_PAREN
IDENTIFIER(dVoid)
SEMICOLON
IDENTIFIER(bool)
IDENTIFIER(topLeftCornerInside)
ASSIGN
IDENTIFIER(euclideanDistance)
L_PAREN
IDENTIFIER(d)
L_SQUARE_BRACKET
NUM_INTEGER(0)
R_SQUARE_BRACKET
COMMA
IDENTIFIER(d)
L_SQUARE_BRACKET
NUM_INTEGER(1)
R_SQUARE_BRACKET
COMMA
IDENTIFIER(Block_GetX)
L_PAREN
IDENTIFIER(block)
R_PAREN
COMMA
IDENTIFIER(Block_GetY)
L_PAREN
IDENTIFIER(block)
R_PAREN
R_PAREN
LESS_EQUAL
IDENTIFIER(d)
L_SQUARE_BRACKET
NUM_INTEGER(2)
R_SQUARE_BRACKET
SEMICOLON
IDENTIFIER(bool)
IDENTIFIER(topRightCornerInside)
ASSIGN
IDENTIFIER(euclideanDistance)
L_PAREN
IDENTIFIER(d)
L_SQUARE_BRACKET
NUM_INTEGER(0)
R_SQUARE_BRACKET
COMMA
IDENTIFIER(d)
L_SQUARE_BRACKET
NUM_INTEGER(1)
R_SQUARE_BRACKET
COMMA
IDENTIFIER(Block_GetX)
L_PAREN
IDENTIFIER(block)
R_PAREN
PLUS
IDENTIFIER(Block_GetW)
L_PAREN
IDENTIFIER(block)
R_PAREN
COMMA
IDENTIFIER(Block_GetY)
L_PAREN
IDENTIFIER(block)
R_PAREN
R_PAREN
LESS_EQUAL
IDENTIFIER(d)
L_SQUARE_BRACKET
NUM_INTEGER(2)
R_SQUARE_BRACKET
SEMICOLON
IDENTIFIER(bool)
IDENTIFIER(bottomLeftCornerInside)
ASSIGN
IDENTIFIER(euclideanDistance)
L_PAREN
IDENTIFIER(d)
L_SQUARE_BRACKET
NUM_INTEGER(0)
R_SQUARE_BRACKET
COMMA
IDENTIFIER(d)
L_SQUARE_BRACKET
NUM_INTEGER(1)
R_SQUARE_BRACKET
COMMA
IDENTIFIER(Block_GetX)
L_PAREN
IDENTIFIER(block)
R_PAREN
COMMA
IDENTIFIER(Block_GetY)
L_PAREN
IDENTIFIER(block)
R_PAREN
PLUS
IDENTIFIER(Block_GetH)
L_PAREN
IDENTIFIER(block)
R_PAREN
R_PAREN
LESS_EQUAL
IDENTIFIER(d)
L_SQUARE_BRACKET
NUM_INTEGER(2)
R_SQUARE_BRACKET
SEMICOLON
IDENTIFIER(bool)
IDENTIFIER(bottomRightCornerInside)
ASSIGN
IDENTIFIER(euclideanDistance)
L_PAREN
IDENTIFIER(d)
L_SQUARE_BRACKET
NUM_INTEGER(0)
R_SQUARE_BRACKET
COMMA
IDENTIFIER(d)
L_SQUARE_BRACKET
NUM_INTEGER(1)
R_SQUARE_BRACKET
COMMA
IDENTIFIER(Block_GetX)
L_PAREN
IDENTIFIER(block)
R_PAREN
PLUS
IDENTIFIER(Block_GetW)
L_PAREN
IDENTIFIER(block)
R_PAREN
COMMA
IDENTIFIER(Block_GetY)
L_PAREN
IDENTIFIER(block)
R_PAREN
PLUS
IDENTIFIER(Block_GetH)
L_PAREN
IDENTIFIER(block)
R_PAREN
R_PAREN
LESS_EQUAL
IDENTIFIER(d)
L_SQUARE_BRACKET
NUM_INTEGER(2)
R_SQUARE_BRACKET
SEMICOLON
RETURN
IDENTIFIER(topLeftCornerInside)
LOGICAL_AND
IDENTIFIER(topRightCornerInside)
LOGICAL_AND
IDENTIFIER(bottomLeftCornerInside)
LOGICAL_AND
IDENTIFIER(bottomRightCornerInside)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(bool)
IDENTIFIER(Query_Overlaps)
L_PAREN
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(txtFile)
COMMA
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(outputFile)
COMMA
CHAR
IDENTIFIER(idA)
L_SQUARE_BRACKET
R_SQUARE_BRACKET
COMMA
CHAR
IDENTIFIER(idB)
L_SQUARE_BRACKET
R_SQUARE_BRACKET
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Object)
IDENTIFIER(a)
ASSIGN
IDENTIFIER(HashTable_Find)
L_PAREN
IDENTIFIER(getObjTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(idA)
R_PAREN
SEMICOLON
IDENTIFIER(Object)
IDENTIFIER(b)
ASSIGN
IDENTIFIER(HashTable_Find)
L_PAREN
IDENTIFIER(getObjTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(idB)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(a)
EQUAL
IDENTIFIER(NULL)
LOGICAL_OR
IDENTIFIER(b)
EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
NUMBER_SIGN
IDENTIFIER(ifdef)
IDENTIFIER(__DEBUG__)
PRINTF
L_PAREN
STRING(Erro: Elemento não encontrado!\n)
R_PAREN
SEMICOLON
NUMBER_SIGN
IDENTIFIER(endif)
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Elemento não encontrado\n\n)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(bool)
IDENTIFIER(overlaps)
ASSIGN
IDENTIFIER(checkOverlap)
L_PAREN
IDENTIFIER(a)
COMMA
IDENTIFIER(b)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(overlaps)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(SIM\n\n)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
ELSE
L_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(NAO\n\n)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(Rectangle)
IDENTIFIER(rectA)
ASSIGN
IDENTIFIER(Rectangle_Create)
L_PAREN
NUM_INTEGER(0)
COMMA
NUM_INTEGER(0)
COMMA
NUM_INTEGER(0)
COMMA
NUM_INTEGER(0)
R_PAREN
SEMICOLON
IDENTIFIER(getSurroundingRect)
L_PAREN
IDENTIFIER(a)
COMMA
IDENTIFIER(rectA)
R_PAREN
SEMICOLON
IDENTIFIER(Rectangle)
IDENTIFIER(rectB)
ASSIGN
IDENTIFIER(Rectangle_Create)
L_PAREN
NUM_INTEGER(0)
COMMA
NUM_INTEGER(0)
COMMA
NUM_INTEGER(0)
COMMA
NUM_INTEGER(0)
R_PAREN
SEMICOLON
IDENTIFIER(getSurroundingRect)
L_PAREN
IDENTIFIER(b)
COMMA
IDENTIFIER(rectB)
R_PAREN
SEMICOLON
IDENTIFIER(double)
IDENTIFIER(minX)
ASSIGN
IDENTIFIER(Rectangle_GetX)
L_PAREN
IDENTIFIER(rectA)
R_PAREN
LESS_THAN
IDENTIFIER(Rectangle_GetX)
L_PAREN
IDENTIFIER(rectB)
R_PAREN
TERNARY_CONDITIONAL
IDENTIFIER(Rectangle_GetX)
L_PAREN
IDENTIFIER(rectA)
R_PAREN
COLON
IDENTIFIER(Rectangle_GetX)
L_PAREN
IDENTIFIER(rectB)
R_PAREN
SEMICOLON
IDENTIFIER(double)
IDENTIFIER(minY)
ASSIGN
IDENTIFIER(Rectangle_GetY)
L_PAREN
IDENTIFIER(rectA)
R_PAREN
LESS_THAN
IDENTIFIER(Rectangle_GetY)
L_PAREN
IDENTIFIER(rectB)
R_PAREN
TERNARY_CONDITIONAL
IDENTIFIER(Rectangle_GetY)
L_PAREN
IDENTIFIER(rectA)
R_PAREN
COLON
IDENTIFIER(Rectangle_GetY)
L_PAREN
IDENTIFIER(rectB)
R_PAREN
SEMICOLON
IDENTIFIER(double)
IDENTIFIER(maxX)
ASSIGN
IDENTIFIER(Rectangle_GetX)
L_PAREN
IDENTIFIER(rectA)
R_PAREN
PLUS
IDENTIFIER(Rectangle_GetWidth)
L_PAREN
IDENTIFIER(rectA)
R_PAREN
LESS_THAN
IDENTIFIER(Rectangle_GetX)
L_PAREN
IDENTIFIER(rectB)
R_PAREN
PLUS
IDENTIFIER(Rectangle_GetWidth)
L_PAREN
IDENTIFIER(rectB)
R_PAREN
TERNARY_CONDITIONAL
IDENTIFIER(Rectangle_GetX)
L_PAREN
IDENTIFIER(rectB)
R_PAREN
PLUS
IDENTIFIER(Rectangle_GetWidth)
L_PAREN
IDENTIFIER(rectB)
R_PAREN
COLON
IDENTIFIER(Rectangle_GetX)
L_PAREN
IDENTIFIER(rectA)
R_PAREN
PLUS
IDENTIFIER(Rectangle_GetWidth)
L_PAREN
IDENTIFIER(rectA)
R_PAREN
SEMICOLON
IDENTIFIER(double)
IDENTIFIER(maxY)
ASSIGN
IDENTIFIER(Rectangle_GetY)
L_PAREN
IDENTIFIER(rectA)
R_PAREN
PLUS
IDENTIFIER(Rectangle_GetHeight)
L_PAREN
IDENTIFIER(rectA)
R_PAREN
LESS_THAN
IDENTIFIER(Rectangle_GetY)
L_PAREN
IDENTIFIER(rectB)
R_PAREN
PLUS
IDENTIFIER(Rectangle_GetHeight)
L_PAREN
IDENTIFIER(rectB)
R_PAREN
TERNARY_CONDITIONAL
IDENTIFIER(Rectangle_GetY)
L_PAREN
IDENTIFIER(rectB)
R_PAREN
PLUS
IDENTIFIER(Rectangle_GetHeight)
L_PAREN
IDENTIFIER(rectB)
R_PAREN
COLON
IDENTIFIER(Rectangle_GetY)
L_PAREN
IDENTIFIER(rectA)
R_PAREN
PLUS
IDENTIFIER(Rectangle_GetHeight)
L_PAREN
IDENTIFIER(rectA)
R_PAREN
SEMICOLON
IDENTIFIER(putSVGBox)
L_PAREN
IDENTIFIER(outputFile)
COMMA
IDENTIFIER(minX)
COMMA
IDENTIFIER(minY)
COMMA
IDENTIFIER(maxX)
MINUS
IDENTIFIER(minX)
COMMA
IDENTIFIER(maxY)
MINUS
IDENTIFIER(minY)
COMMA
NOT
IDENTIFIER(overlaps)
R_PAREN
SEMICOLON
IDENTIFIER(Rectangle_Destroy)
L_PAREN
IDENTIFIER(rectA)
R_PAREN
SEMICOLON
IDENTIFIER(Rectangle_Destroy)
L_PAREN
IDENTIFIER(rectB)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(bool)
IDENTIFIER(Query_Inside)
L_PAREN
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(txtFile)
COMMA
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(outputFile)
COMMA
CHAR
IDENTIFIER(id)
L_SQUARE_BRACKET
R_SQUARE_BRACKET
COMMA
IDENTIFIER(double)
IDENTIFIER(x)
COMMA
IDENTIFIER(double)
IDENTIFIER(y)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Object)
IDENTIFIER(o)
ASSIGN
IDENTIFIER(HashTable_Find)
L_PAREN
IDENTIFIER(getObjTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(id)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(o)
EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
NUMBER_SIGN
IDENTIFIER(ifdef)
IDENTIFIER(__DEBUG__)
PRINTF
L_PAREN
STRING(Erro: Elemento não encontrado: %s!\n)
COMMA
IDENTIFIER(id)
R_PAREN
SEMICOLON
NUMBER_SIGN
IDENTIFIER(endif)
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Elemento não encontrado\n\n)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(bool)
IDENTIFIER(inside)
ASSIGN
IDENTIFIER(checkInside)
L_PAREN
IDENTIFIER(o)
COMMA
IDENTIFIER(x)
COMMA
IDENTIFIER(y)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(inside)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(INTERNO\n\n)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
ELSE
L_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(NAO INTERNO\n\n)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(double)
IDENTIFIER(centerX)
COMMA
IDENTIFIER(centerY)
SEMICOLON
IDENTIFIER(getCenter)
L_PAREN
IDENTIFIER(o)
COMMA
BITWISE_AND
IDENTIFIER(centerX)
COMMA
BITWISE_AND
IDENTIFIER(centerY)
R_PAREN
SEMICOLON
IDENTIFIER(putSVGLine)
L_PAREN
IDENTIFIER(outputFile)
COMMA
IDENTIFIER(centerX)
COMMA
IDENTIFIER(centerY)
COMMA
IDENTIFIER(x)
COMMA
IDENTIFIER(y)
R_PAREN
SEMICOLON
IDENTIFIER(putSVGPoint)
L_PAREN
IDENTIFIER(outputFile)
COMMA
IDENTIFIER(x)
COMMA
IDENTIFIER(y)
COMMA
IDENTIFIER(inside)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(bool)
IDENTIFIER(Query_Distance)
L_PAREN
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(txtFile)
COMMA
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(outputFile)
COMMA
CHAR
IDENTIFIER(j)
L_SQUARE_BRACKET
R_SQUARE_BRACKET
COMMA
CHAR
IDENTIFIER(k)
L_SQUARE_BRACKET
R_SQUARE_BRACKET
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(double)
IDENTIFIER(c1x)
COMMA
IDENTIFIER(c1y)
COMMA
IDENTIFIER(c2x)
COMMA
IDENTIFIER(c2y)
SEMICOLON
IDENTIFIER(Object)
IDENTIFIER(a)
ASSIGN
IDENTIFIER(HashTable_Find)
L_PAREN
IDENTIFIER(getObjTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(j)
R_PAREN
SEMICOLON
IDENTIFIER(Object)
IDENTIFIER(b)
ASSIGN
IDENTIFIER(HashTable_Find)
L_PAREN
IDENTIFIER(getObjTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(k)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(a)
EQUAL
IDENTIFIER(NULL)
LOGICAL_OR
IDENTIFIER(b)
EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
NUMBER_SIGN
IDENTIFIER(ifdef)
IDENTIFIER(__DEBUG__)
PRINTF
L_PAREN
STRING(Erro: Elemento não encontrado!\n)
R_PAREN
SEMICOLON
NUMBER_SIGN
IDENTIFIER(endif)
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Elemento não encontrado\n\n)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(getCenter)
L_PAREN
IDENTIFIER(a)
COMMA
BITWISE_AND
IDENTIFIER(c1x)
COMMA
BITWISE_AND
IDENTIFIER(c1y)
R_PAREN
SEMICOLON
IDENTIFIER(getCenter)
L_PAREN
IDENTIFIER(b)
COMMA
BITWISE_AND
IDENTIFIER(c2x)
COMMA
BITWISE_AND
IDENTIFIER(c2y)
R_PAREN
SEMICOLON
IDENTIFIER(double)
IDENTIFIER(dist)
ASSIGN
IDENTIFIER(euclideanDistance)
L_PAREN
IDENTIFIER(c1x)
COMMA
IDENTIFIER(c1y)
COMMA
IDENTIFIER(c2x)
COMMA
IDENTIFIER(c2y)
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(%lf\n\n)
COMMA
IDENTIFIER(dist)
R_PAREN
SEMICOLON
IDENTIFIER(putSVGLine)
L_PAREN
IDENTIFIER(outputFile)
COMMA
IDENTIFIER(c1x)
COMMA
IDENTIFIER(c1y)
COMMA
IDENTIFIER(c2x)
COMMA
IDENTIFIER(c2y)
R_PAREN
SEMICOLON
CHAR
IDENTIFIER(distText)
L_SQUARE_BRACKET
NUM_INTEGER(16)
R_SQUARE_BRACKET
SEMICOLON
IDENTIFIER(sprintf)
L_PAREN
IDENTIFIER(distText)
COMMA
STRING(%lf)
COMMA
IDENTIFIER(dist)
R_PAREN
SEMICOLON
IDENTIFIER(putSVGText)
L_PAREN
IDENTIFIER(outputFile)
COMMA
IDENTIFIER(c1x)
PLUS
L_PAREN
IDENTIFIER(c2x)
MINUS
IDENTIFIER(c1x)
R_PAREN
DIV
NUM_INTEGER(2)
COMMA
IDENTIFIER(c1y)
PLUS
L_PAREN
IDENTIFIER(c2y)
MINUS
IDENTIFIER(c1y)
R_PAREN
DIV
NUM_INTEGER(2)
COMMA
IDENTIFIER(distText)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(bool)
IDENTIFIER(Query_Bb)
L_PAREN
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(txtFile)
COMMA
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(outputFile)
COMMA
CHAR
IDENTIFIER(outputDir)
L_SQUARE_BRACKET
R_SQUARE_BRACKET
COMMA
CHAR
IDENTIFIER(svgFileName)
L_SQUARE_BRACKET
R_SQUARE_BRACKET
COMMA
CHAR
IDENTIFIER(suffix)
L_SQUARE_BRACKET
R_SQUARE_BRACKET
COMMA
CHAR
IDENTIFIER(color)
L_SQUARE_BRACKET
R_SQUARE_BRACKET
R_PAREN
L_CURLY_BRACKET
CHAR
IDENTIFIER(nameWithSuffix)
L_SQUARE_BRACKET
NUM_INTEGER(128)
R_SQUARE_BRACKET
SEMICOLON
IDENTIFIER(strcpy)
L_PAREN
IDENTIFIER(nameWithSuffix)
COMMA
IDENTIFIER(svgFileName)
R_PAREN
SEMICOLON
IDENTIFIER(addSuffix)
L_PAREN
IDENTIFIER(nameWithSuffix)
COMMA
IDENTIFIER(suffix)
R_PAREN
SEMICOLON
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(bbFile)
ASSIGN
IDENTIFIER(openFile)
L_PAREN
IDENTIFIER(outputDir)
COMMA
IDENTIFIER(nameWithSuffix)
COMMA
STRING(w)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(bbFile)
EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(putSVGStart)
L_PAREN
IDENTIFIER(bbFile)
R_PAREN
SEMICOLON
IDENTIFIER(BBParameters)
IDENTIFIER(params)
ASSIGN
L_CURLY_BRACKET
IDENTIFIER(bbFile)
COMMA
IDENTIFIER(color)
R_CURLY_BRACKET
SEMICOLON
IDENTIFIER(RBTree_Execute)
L_PAREN
IDENTIFIER(getObjTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(insertBoundingBoxElement)
COMMA
BITWISE_AND
IDENTIFIER(params)
R_PAREN
SEMICOLON
IDENTIFIER(putSVGEnd)
L_PAREN
IDENTIFIER(bbFile)
R_PAREN
SEMICOLON
IDENTIFIER(fclose)
L_PAREN
IDENTIFIER(bbFile)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(bool)
IDENTIFIER(Query_Dq)
L_PAREN
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(txtFile)
COMMA
CHAR
IDENTIFIER(metric)
L_SQUARE_BRACKET
R_SQUARE_BRACKET
COMMA
CHAR
IDENTIFIER(id)
L_SQUARE_BRACKET
R_SQUARE_BRACKET
COMMA
IDENTIFIER(double)
IDENTIFIER(dist)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Equip)
IDENTIFIER(e)
ASSIGN
IDENTIFIER(HashTable_Find)
L_PAREN
IDENTIFIER(getHydTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(id)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(e)
EQUAL
IDENTIFIER(NULL)
R_PAREN
IDENTIFIER(e)
ASSIGN
IDENTIFIER(HashTable_Find)
L_PAREN
IDENTIFIER(getCTowerTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(id)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(e)
EQUAL
IDENTIFIER(NULL)
R_PAREN
IDENTIFIER(e)
ASSIGN
IDENTIFIER(HashTable_Find)
L_PAREN
IDENTIFIER(getTLightTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(id)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(e)
EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
NUMBER_SIGN
IDENTIFIER(ifdef)
IDENTIFIER(__DEBUG__)
PRINTF
L_PAREN
STRING(Erro: Elemento não encontrado: %s!\n)
COMMA
IDENTIFIER(id)
R_PAREN
SEMICOLON
NUMBER_SIGN
IDENTIFIER(endif)
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Equipamento ID: %s\n)
COMMA
IDENTIFIER(Equip_GetID)
L_PAREN
IDENTIFIER(e)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(bool)
L_PAREN
MULTIPLY
IDENTIFIER(_blockInDistance)
R_PAREN
L_PAREN
VOID
MULTIPLY
COMMA
VOID
MULTIPLY
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(strcmp)
L_PAREN
IDENTIFIER(metric)
COMMA
STRING(L1)
R_PAREN
EQUAL
NUM_INTEGER(0)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(_blockInDistance)
ASSIGN
IDENTIFIER(blockInDistanceL1)
SEMICOLON
R_CURLY_BRACKET
ELSE
IF
L_PAREN
IDENTIFIER(strcmp)
L_PAREN
IDENTIFIER(metric)
COMMA
STRING(L2)
R_PAREN
EQUAL
NUM_INTEGER(0)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(_blockInDistance)
ASSIGN
IDENTIFIER(blockInDistanceL2)
SEMICOLON
R_CURLY_BRACKET
ELSE
L_CURLY_BRACKET
PRINTF
L_PAREN
STRING(Métrica não reconhecida: %s\n)
COMMA
IDENTIFIER(metric)
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Métrica não reconhecida: %s\n\n)
COMMA
IDENTIFIER(metric)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(Equip_SetHighlighted)
L_PAREN
IDENTIFIER(e)
COMMA
IDENTIFIER(true)
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Quadras removidas: )
R_PAREN
SEMICOLON
IDENTIFIER(double)
IDENTIFIER(dInfos)
L_SQUARE_BRACKET
NUM_INTEGER(3)
R_SQUARE_BRACKET
ASSIGN
L_CURLY_BRACKET
IDENTIFIER(Equip_GetX)
L_PAREN
IDENTIFIER(e)
R_PAREN
COMMA
IDENTIFIER(Equip_GetY)
L_PAREN
IDENTIFIER(e)
R_PAREN
COMMA
IDENTIFIER(dist)
R_CURLY_BRACKET
SEMICOLON
IDENTIFIER(Block)
IDENTIFIER(b)
SEMICOLON
WHILE
L_PAREN
IDENTIFIER(b)
ASSIGN
IDENTIFIER(RBTree_FindWhere)
L_PAREN
IDENTIFIER(getBlockTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(_blockInDistance)
COMMA
L_PAREN
VOID
MULTIPLY
R_PAREN
IDENTIFIER(dInfos)
R_PAREN
COMMA
IDENTIFIER(b)
NOT_EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(\n\t- %s)
COMMA
IDENTIFIER(Block_GetCep)
L_PAREN
IDENTIFIER(b)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(RBTree_Remove)
L_PAREN
IDENTIFIER(getBlockTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(Block_GetPoint)
L_PAREN
IDENTIFIER(b)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(HashTable_Remove)
L_PAREN
IDENTIFIER(getBlockTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(Block_GetCep)
L_PAREN
IDENTIFIER(b)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(Block_Destroy)
L_PAREN
IDENTIFIER(b)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(\n\n)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(bool)
IDENTIFIER(Query_Del)
L_PAREN
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(txtFile)
COMMA
CHAR
IDENTIFIER(id)
L_SQUARE_BRACKET
R_SQUARE_BRACKET
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Block)
IDENTIFIER(b)
ASSIGN
IDENTIFIER(HashTable_Find)
L_PAREN
IDENTIFIER(getBlockTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(id)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(b)
NOT_EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Informações da quadra removida:\n)
STRING(CEP: %s\nPos: (%.2lf, %.2lf)\n)
STRING(Largura: %.2lf\nAltura: %.2lf\n\n)
COMMA
IDENTIFIER(Block_GetCep)
L_PAREN
IDENTIFIER(b)
R_PAREN
COMMA
IDENTIFIER(Block_GetX)
L_PAREN
IDENTIFIER(b)
R_PAREN
COMMA
IDENTIFIER(Block_GetY)
L_PAREN
IDENTIFIER(b)
R_PAREN
COMMA
IDENTIFIER(Block_GetW)
L_PAREN
IDENTIFIER(b)
R_PAREN
COMMA
IDENTIFIER(Block_GetH)
L_PAREN
IDENTIFIER(b)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(RBTree_Remove)
L_PAREN
IDENTIFIER(getBlockTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(Block_GetPoint)
L_PAREN
IDENTIFIER(b)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(HashTable_Remove)
L_PAREN
IDENTIFIER(getBlockTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(id)
R_PAREN
SEMICOLON
IDENTIFIER(Block_Destroy)
L_PAREN
IDENTIFIER(b)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(Equip)
IDENTIFIER(e)
ASSIGN
IDENTIFIER(HashTable_Find)
L_PAREN
IDENTIFIER(getHydTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(id)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(e)
NOT_EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Informações do hidrante removido:\n)
STRING(ID: %s\nPos: (%.2lf, %.2lf)\n\n)
COMMA
IDENTIFIER(Equip_GetID)
L_PAREN
IDENTIFIER(e)
R_PAREN
COMMA
IDENTIFIER(Equip_GetX)
L_PAREN
IDENTIFIER(e)
R_PAREN
COMMA
IDENTIFIER(Equip_GetY)
L_PAREN
IDENTIFIER(e)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(RBTree_Remove)
L_PAREN
IDENTIFIER(getHydTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(Equip_GetPoint)
L_PAREN
IDENTIFIER(e)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(HashTable_Remove)
L_PAREN
IDENTIFIER(getHydTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(id)
R_PAREN
SEMICOLON
IDENTIFIER(Equip_Destroy)
L_PAREN
IDENTIFIER(e)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(e)
ASSIGN
IDENTIFIER(HashTable_Find)
L_PAREN
IDENTIFIER(getCTowerTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(id)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(e)
NOT_EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Informações da rádio-base removida:\n)
STRING(ID: %s\nPos: (%.2lf, %.2lf)\n\n)
COMMA
IDENTIFIER(Equip_GetID)
L_PAREN
IDENTIFIER(e)
R_PAREN
COMMA
IDENTIFIER(Equip_GetX)
L_PAREN
IDENTIFIER(e)
R_PAREN
COMMA
IDENTIFIER(Equip_GetY)
L_PAREN
IDENTIFIER(e)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(RBTree_Remove)
L_PAREN
IDENTIFIER(getCTowerTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(Equip_GetPoint)
L_PAREN
IDENTIFIER(e)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(HashTable_Remove)
L_PAREN
IDENTIFIER(getCTowerTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(id)
R_PAREN
SEMICOLON
IDENTIFIER(Equip_Destroy)
L_PAREN
IDENTIFIER(e)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(e)
ASSIGN
IDENTIFIER(HashTable_Find)
L_PAREN
IDENTIFIER(getTLightTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(id)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(e)
NOT_EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Informações do semáforo removido:\n)
STRING(ID: %s\nPos: (%.2lf, %.2lf)\n\n)
COMMA
IDENTIFIER(Equip_GetID)
L_PAREN
IDENTIFIER(e)
R_PAREN
COMMA
IDENTIFIER(Equip_GetX)
L_PAREN
IDENTIFIER(e)
R_PAREN
COMMA
IDENTIFIER(Equip_GetY)
L_PAREN
IDENTIFIER(e)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(RBTree_Remove)
L_PAREN
IDENTIFIER(getTLightTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(Equip_GetPoint)
L_PAREN
IDENTIFIER(e)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(HashTable_Remove)
L_PAREN
IDENTIFIER(getTLightTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(id)
R_PAREN
SEMICOLON
IDENTIFIER(Equip_Destroy)
L_PAREN
IDENTIFIER(e)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Elemento não encontrado\n\n)
R_PAREN
SEMICOLON
NUMBER_SIGN
IDENTIFIER(ifdef)
IDENTIFIER(__DEBUG__)
PRINTF
L_PAREN
STRING(Erro: Elemento não encontrado: %s!\n)
COMMA
IDENTIFIER(id)
R_PAREN
SEMICOLON
NUMBER_SIGN
IDENTIFIER(endif)
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
TYPEDEF
STRUCT
IDENTIFIER(InfosCbq)
L_CURLY_BRACKET
IDENTIFIER(double)
IDENTIFIER(dInfos)
L_SQUARE_BRACKET
NUM_INTEGER(3)
R_SQUARE_BRACKET
SEMICOLON
CHAR
MULTIPLY
IDENTIFIER(cStrk)
SEMICOLON
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(txtFile)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(InfosCbq)
SEMICOLON
IDENTIFIER(static)
IDENTIFIER(bool)
IDENTIFIER(_canBeOnLeftSubtree)
L_PAREN
IDENTIFIER(double)
IDENTIFIER(x)
COMMA
IDENTIFIER(double)
IDENTIFIER(r)
COMMA
IDENTIFIER(double)
IDENTIFIER(xChild)
R_PAREN
L_CURLY_BRACKET
RETURN
IDENTIFIER(xChild)
GREATER_EQUAL
IDENTIFIER(x)
MINUS
IDENTIFIER(r)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(static)
IDENTIFIER(bool)
IDENTIFIER(_canBeOnRightSubtree)
L_PAREN
IDENTIFIER(double)
IDENTIFIER(x)
COMMA
IDENTIFIER(double)
IDENTIFIER(r)
COMMA
IDENTIFIER(double)
IDENTIFIER(xChild)
R_PAREN
L_CURLY_BRACKET
RETURN
IDENTIFIER(xChild)
LESS_EQUAL
IDENTIFIER(x)
PLUS
IDENTIFIER(r)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(static)
VOID
IDENTIFIER(_changeBlockColorTree)
L_PAREN
IDENTIFIER(RBTree)
IDENTIFIER(tree)
COMMA
IDENTIFIER(Node)
IDENTIFIER(node)
COMMA
IDENTIFIER(InfosCbq)
MULTIPLY
IDENTIFIER(infos)
R_PAREN
L_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(node)
EQUAL
IDENTIFIER(NULL)
R_PAREN
RETURN
SEMICOLON
IDENTIFIER(double)
MULTIPLY
IDENTIFIER(d)
ASSIGN
IDENTIFIER(infos)
POINTER
IDENTIFIER(dInfos)
SEMICOLON
IDENTIFIER(Block)
IDENTIFIER(b)
ASSIGN
IDENTIFIER(RBTreeN_GetValue)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(_canBeOnLeftSubtree)
L_PAREN
IDENTIFIER(d)
L_SQUARE_BRACKET
NUM_INTEGER(0)
R_SQUARE_BRACKET
COMMA
IDENTIFIER(d)
L_SQUARE_BRACKET
NUM_INTEGER(2)
R_SQUARE_BRACKET
COMMA
IDENTIFIER(Block_GetX)
L_PAREN
IDENTIFIER(b)
R_PAREN
R_PAREN
R_PAREN
IDENTIFIER(_changeBlockColorTree)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetLeftChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(infos)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(blockInDistanceL2)
L_PAREN
IDENTIFIER(b)
COMMA
L_PAREN
VOID
MULTIPLY
R_PAREN
IDENTIFIER(d)
R_PAREN
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(infos)
POINTER
IDENTIFIER(txtFile)
COMMA
STRING(\n\t- %s)
COMMA
IDENTIFIER(Block_GetCep)
L_PAREN
IDENTIFIER(b)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(Block_SetCStroke)
L_PAREN
IDENTIFIER(b)
COMMA
IDENTIFIER(infos)
POINTER
IDENTIFIER(cStrk)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(_canBeOnRightSubtree)
L_PAREN
IDENTIFIER(d)
L_SQUARE_BRACKET
NUM_INTEGER(0)
R_SQUARE_BRACKET
COMMA
IDENTIFIER(d)
L_SQUARE_BRACKET
NUM_INTEGER(2)
R_SQUARE_BRACKET
COMMA
IDENTIFIER(Block_GetX)
L_PAREN
IDENTIFIER(b)
R_PAREN
R_PAREN
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(_changeBlockColorTree)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetRightChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(infos)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
R_CURLY_BRACKET
IDENTIFIER(bool)
IDENTIFIER(Query_Cbq)
L_PAREN
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(txtFile)
COMMA
IDENTIFIER(double)
IDENTIFIER(x)
COMMA
IDENTIFIER(double)
IDENTIFIER(y)
COMMA
IDENTIFIER(double)
IDENTIFIER(r)
COMMA
CHAR
IDENTIFIER(cStrk)
L_SQUARE_BRACKET
R_SQUARE_BRACKET
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Quadras que tiveram as bordas alteradas: )
R_PAREN
SEMICOLON
IDENTIFIER(InfosCbq)
IDENTIFIER(infos)
ASSIGN
L_CURLY_BRACKET
L_CURLY_BRACKET
IDENTIFIER(x)
COMMA
IDENTIFIER(y)
COMMA
IDENTIFIER(r)
R_CURLY_BRACKET
COMMA
IDENTIFIER(cStrk)
COMMA
IDENTIFIER(txtFile)
R_CURLY_BRACKET
SEMICOLON
IDENTIFIER(_changeBlockColorTree)
L_PAREN
IDENTIFIER(getBlockTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(RBTree_GetRoot)
L_PAREN
IDENTIFIER(getBlockTree)
L_PAREN
R_PAREN
R_PAREN
COMMA
BITWISE_AND
IDENTIFIER(infos)
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(\n\n)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(bool)
IDENTIFIER(Query_Crd)
L_PAREN
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(txtFile)
COMMA
CHAR
IDENTIFIER(id)
L_SQUARE_BRACKET
R_SQUARE_BRACKET
R_PAREN
L_CURLY_BRACKET
CHAR
IDENTIFIER(eqType)
L_SQUARE_BRACKET
NUM_INTEGER(24)
R_SQUARE_BRACKET
ASSIGN
STRING()
SEMICOLON
IDENTIFIER(double)
IDENTIFIER(x)
COMMA
IDENTIFIER(y)
SEMICOLON
IDENTIFIER(Equip)
IDENTIFIER(e)
SEMICOLON
IDENTIFIER(Block)
IDENTIFIER(b)
SEMICOLON
IF
L_PAREN
IDENTIFIER(b)
ASSIGN
IDENTIFIER(HashTable_Find)
L_PAREN
IDENTIFIER(getBlockTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(id)
R_PAREN
COMMA
IDENTIFIER(b)
NOT_EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(strcpy)
L_PAREN
IDENTIFIER(eqType)
COMMA
STRING(Quadra)
R_PAREN
SEMICOLON
IDENTIFIER(x)
ASSIGN
IDENTIFIER(Block_GetX)
L_PAREN
IDENTIFIER(b)
R_PAREN
SEMICOLON
IDENTIFIER(y)
ASSIGN
IDENTIFIER(Block_GetY)
L_PAREN
IDENTIFIER(b)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
ELSE
IF
L_PAREN
IDENTIFIER(e)
ASSIGN
IDENTIFIER(HashTable_Find)
L_PAREN
IDENTIFIER(getHydTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(id)
R_PAREN
COMMA
IDENTIFIER(e)
NOT_EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(strcpy)
L_PAREN
IDENTIFIER(eqType)
COMMA
STRING(Hidrante)
R_PAREN
SEMICOLON
IDENTIFIER(x)
ASSIGN
IDENTIFIER(Equip_GetX)
L_PAREN
IDENTIFIER(e)
R_PAREN
SEMICOLON
IDENTIFIER(y)
ASSIGN
IDENTIFIER(Equip_GetY)
L_PAREN
IDENTIFIER(e)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
ELSE
IF
L_PAREN
IDENTIFIER(e)
ASSIGN
IDENTIFIER(HashTable_Find)
L_PAREN
IDENTIFIER(getCTowerTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(id)
R_PAREN
COMMA
IDENTIFIER(e)
NOT_EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(strcpy)
L_PAREN
IDENTIFIER(eqType)
COMMA
STRING(Rádio-base)
R_PAREN
SEMICOLON
IDENTIFIER(x)
ASSIGN
IDENTIFIER(Equip_GetX)
L_PAREN
IDENTIFIER(e)
R_PAREN
SEMICOLON
IDENTIFIER(y)
ASSIGN
IDENTIFIER(Equip_GetY)
L_PAREN
IDENTIFIER(e)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
ELSE
IF
L_PAREN
IDENTIFIER(e)
ASSIGN
IDENTIFIER(HashTable_Find)
L_PAREN
IDENTIFIER(getTLightTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(id)
R_PAREN
COMMA
IDENTIFIER(e)
NOT_EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(strcpy)
L_PAREN
IDENTIFIER(eqType)
COMMA
STRING(Semáforo)
R_PAREN
SEMICOLON
IDENTIFIER(x)
ASSIGN
IDENTIFIER(Equip_GetX)
L_PAREN
IDENTIFIER(e)
R_PAREN
SEMICOLON
IDENTIFIER(y)
ASSIGN
IDENTIFIER(Equip_GetY)
L_PAREN
IDENTIFIER(e)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(eqType)
L_SQUARE_BRACKET
NUM_INTEGER(0)
R_SQUARE_BRACKET
NOT_EQUAL
CHARACTER(\0)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Espécie do equipamento: %s\n)
STRING(Pos: (%.2lf, %.2lf)\n\n)
COMMA
IDENTIFIER(eqType)
COMMA
IDENTIFIER(x)
COMMA
IDENTIFIER(y)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
ELSE
L_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Elemento não encontrado\n\n)
R_PAREN
SEMICOLON
NUMBER_SIGN
IDENTIFIER(ifdef)
IDENTIFIER(__DEBUG__)
PRINTF
L_PAREN
STRING(Erro: Elemento não encontrado: %s!\n)
COMMA
IDENTIFIER(id)
R_PAREN
SEMICOLON
NUMBER_SIGN
IDENTIFIER(endif)
R_CURLY_BRACKET
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
TYPEDEF
STRUCT
IDENTIFIER(InfosTrns)
L_CURLY_BRACKET
IDENTIFIER(double)
IDENTIFIER(x)
COMMA
IDENTIFIER(y)
COMMA
IDENTIFIER(w)
COMMA
IDENTIFIER(h)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(InfosTrns)
SEMICOLON
TYPEDEF
STRUCT
IDENTIFIER(list_node_t)
L_CURLY_BRACKET
VOID
MULTIPLY
IDENTIFIER(element)
SEMICOLON
IDENTIFIER(RBTree)
IDENTIFIER(tree)
SEMICOLON
IDENTIFIER(HashTable)
IDENTIFIER(table)
SEMICOLON
STRUCT
IDENTIFIER(list_node_t)
MULTIPLY
IDENTIFIER(next)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(ListNode)
SEMICOLON
IDENTIFIER(static)
VOID
IDENTIFIER(_translateBlockTree)
L_PAREN
IDENTIFIER(RBTree)
IDENTIFIER(tree)
COMMA
IDENTIFIER(Node)
IDENTIFIER(node)
COMMA
IDENTIFIER(InfosTrns)
MULTIPLY
IDENTIFIER(infos)
COMMA
IDENTIFIER(ListNode)
MULTIPLY
MULTIPLY
IDENTIFIER(list)
R_PAREN
L_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(node)
EQUAL
IDENTIFIER(NULL)
R_PAREN
RETURN
SEMICOLON
IDENTIFIER(Block)
IDENTIFIER(block)
ASSIGN
IDENTIFIER(RBTreeN_GetValue)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(_canBeOnLeftSubtree)
L_PAREN
IDENTIFIER(infos)
POINTER
IDENTIFIER(x)
PLUS
IDENTIFIER(infos)
POINTER
IDENTIFIER(w)
COMMA
IDENTIFIER(infos)
POINTER
IDENTIFIER(w)
COMMA
IDENTIFIER(Block_GetX)
L_PAREN
IDENTIFIER(block)
R_PAREN
R_PAREN
R_PAREN
IDENTIFIER(_translateBlockTree)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetLeftChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(infos)
COMMA
IDENTIFIER(list)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(Block_GetX)
L_PAREN
IDENTIFIER(block)
R_PAREN
GREATER_EQUAL
IDENTIFIER(infos)
POINTER
IDENTIFIER(x)
LOGICAL_AND
IDENTIFIER(Block_GetX)
L_PAREN
IDENTIFIER(block)
R_PAREN
PLUS
IDENTIFIER(Block_GetW)
L_PAREN
IDENTIFIER(block)
R_PAREN
LESS_EQUAL
IDENTIFIER(infos)
POINTER
IDENTIFIER(x)
PLUS
IDENTIFIER(infos)
POINTER
IDENTIFIER(w)
LOGICAL_AND
IDENTIFIER(Block_GetY)
L_PAREN
IDENTIFIER(block)
R_PAREN
GREATER_EQUAL
IDENTIFIER(infos)
POINTER
IDENTIFIER(y)
LOGICAL_AND
IDENTIFIER(Block_GetY)
L_PAREN
IDENTIFIER(block)
R_PAREN
PLUS
IDENTIFIER(Block_GetH)
L_PAREN
IDENTIFIER(block)
R_PAREN
LESS_EQUAL
IDENTIFIER(infos)
POINTER
IDENTIFIER(y)
PLUS
IDENTIFIER(infos)
POINTER
IDENTIFIER(h)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(ListNode)
MULTIPLY
IDENTIFIER(node)
ASSIGN
IDENTIFIER(malloc)
L_PAREN
IDENTIFIER(sizeof)
L_PAREN
STRUCT
IDENTIFIER(list_node_t)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(node)
POINTER
IDENTIFIER(element)
ASSIGN
IDENTIFIER(block)
SEMICOLON
IDENTIFIER(node)
POINTER
IDENTIFIER(tree)
ASSIGN
IDENTIFIER(tree)
SEMICOLON
IDENTIFIER(node)
POINTER
IDENTIFIER(next)
ASSIGN
IDENTIFIER(NULL)
SEMICOLON
L_PAREN
MULTIPLY
IDENTIFIER(list)
R_PAREN
POINTER
IDENTIFIER(next)
ASSIGN
IDENTIFIER(node)
SEMICOLON
MULTIPLY
IDENTIFIER(list)
ASSIGN
IDENTIFIER(node)
SEMICOLON
R_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(_canBeOnRightSubtree)
L_PAREN
IDENTIFIER(infos)
POINTER
IDENTIFIER(x)
COMMA
IDENTIFIER(infos)
POINTER
IDENTIFIER(x)
PLUS
IDENTIFIER(infos)
POINTER
IDENTIFIER(w)
COMMA
IDENTIFIER(Block_GetX)
L_PAREN
IDENTIFIER(block)
R_PAREN
R_PAREN
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(_translateBlockTree)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetRightChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(infos)
COMMA
IDENTIFIER(list)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
R_CURLY_BRACKET
IDENTIFIER(static)
VOID
IDENTIFIER(_translateEquipTree)
L_PAREN
IDENTIFIER(RBTree)
IDENTIFIER(tree)
COMMA
IDENTIFIER(Node)
IDENTIFIER(node)
COMMA
IDENTIFIER(InfosTrns)
MULTIPLY
IDENTIFIER(infos)
COMMA
IDENTIFIER(ListNode)
MULTIPLY
MULTIPLY
IDENTIFIER(list)
R_PAREN
L_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(node)
EQUAL
IDENTIFIER(NULL)
R_PAREN
RETURN
SEMICOLON
IDENTIFIER(Equip)
IDENTIFIER(equip)
ASSIGN
IDENTIFIER(RBTreeN_GetValue)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(_canBeOnLeftSubtree)
L_PAREN
IDENTIFIER(infos)
POINTER
IDENTIFIER(x)
PLUS
IDENTIFIER(infos)
POINTER
IDENTIFIER(w)
COMMA
IDENTIFIER(infos)
POINTER
IDENTIFIER(w)
COMMA
IDENTIFIER(Equip_GetX)
L_PAREN
IDENTIFIER(equip)
R_PAREN
R_PAREN
R_PAREN
IDENTIFIER(_translateEquipTree)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetLeftChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(infos)
COMMA
IDENTIFIER(list)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(Equip_GetX)
L_PAREN
IDENTIFIER(equip)
R_PAREN
GREATER_EQUAL
IDENTIFIER(infos)
POINTER
IDENTIFIER(x)
LOGICAL_AND
IDENTIFIER(Equip_GetX)
L_PAREN
IDENTIFIER(equip)
R_PAREN
LESS_EQUAL
IDENTIFIER(infos)
POINTER
IDENTIFIER(x)
PLUS
IDENTIFIER(infos)
POINTER
IDENTIFIER(w)
LOGICAL_AND
IDENTIFIER(Equip_GetY)
L_PAREN
IDENTIFIER(equip)
R_PAREN
GREATER_EQUAL
IDENTIFIER(infos)
POINTER
IDENTIFIER(y)
LOGICAL_AND
IDENTIFIER(Equip_GetY)
L_PAREN
IDENTIFIER(equip)
R_PAREN
LESS_EQUAL
IDENTIFIER(infos)
POINTER
IDENTIFIER(y)
PLUS
IDENTIFIER(infos)
POINTER
IDENTIFIER(h)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(ListNode)
MULTIPLY
IDENTIFIER(node)
ASSIGN
IDENTIFIER(malloc)
L_PAREN
IDENTIFIER(sizeof)
L_PAREN
STRUCT
IDENTIFIER(list_node_t)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(node)
POINTER
IDENTIFIER(element)
ASSIGN
IDENTIFIER(equip)
SEMICOLON
IDENTIFIER(node)
POINTER
IDENTIFIER(tree)
ASSIGN
IDENTIFIER(tree)
SEMICOLON
IDENTIFIER(node)
POINTER
IDENTIFIER(next)
ASSIGN
IDENTIFIER(NULL)
SEMICOLON
L_PAREN
MULTIPLY
IDENTIFIER(list)
R_PAREN
POINTER
IDENTIFIER(next)
ASSIGN
IDENTIFIER(node)
SEMICOLON
MULTIPLY
IDENTIFIER(list)
ASSIGN
IDENTIFIER(node)
SEMICOLON
R_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(_canBeOnRightSubtree)
L_PAREN
IDENTIFIER(infos)
POINTER
IDENTIFIER(x)
COMMA
IDENTIFIER(infos)
POINTER
IDENTIFIER(x)
PLUS
IDENTIFIER(infos)
POINTER
IDENTIFIER(w)
COMMA
IDENTIFIER(Equip_GetX)
L_PAREN
IDENTIFIER(equip)
R_PAREN
R_PAREN
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(_translateEquipTree)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetRightChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(infos)
COMMA
IDENTIFIER(list)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
R_CURLY_BRACKET
IDENTIFIER(bool)
IDENTIFIER(Query_Trns)
L_PAREN
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(txtFile)
COMMA
IDENTIFIER(double)
IDENTIFIER(x)
COMMA
IDENTIFIER(double)
IDENTIFIER(y)
COMMA
IDENTIFIER(double)
IDENTIFIER(w)
COMMA
IDENTIFIER(double)
IDENTIFIER(h)
COMMA
IDENTIFIER(double)
IDENTIFIER(dx)
COMMA
IDENTIFIER(double)
IDENTIFIER(dy)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(InfosTrns)
IDENTIFIER(infos)
SEMICOLON
IDENTIFIER(infos)
error:lexical:390:10: .
IDENTIFIER(x)
ASSIGN
IDENTIFIER(x)
SEMICOLON
IDENTIFIER(infos)
error:lexical:391:10: .
IDENTIFIER(y)
ASSIGN
IDENTIFIER(y)
SEMICOLON
IDENTIFIER(infos)
error:lexical:392:10: .
IDENTIFIER(w)
ASSIGN
IDENTIFIER(w)
SEMICOLON
IDENTIFIER(infos)
error:lexical:393:10: .
IDENTIFIER(h)
ASSIGN
IDENTIFIER(h)
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Equipamentos movidos:)
R_PAREN
SEMICOLON
IDENTIFIER(ListNode)
MULTIPLY
IDENTIFIER(node)
ASSIGN
IDENTIFIER(malloc)
L_PAREN
IDENTIFIER(sizeof)
L_PAREN
STRUCT
IDENTIFIER(list_node_t)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(node)
POINTER
IDENTIFIER(next)
ASSIGN
IDENTIFIER(NULL)
SEMICOLON
IDENTIFIER(ListNode)
MULTIPLY
IDENTIFIER(nodeP)
ASSIGN
IDENTIFIER(node)
SEMICOLON
IDENTIFIER(_translateBlockTree)
L_PAREN
IDENTIFIER(getBlockTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(RBTree_GetRoot)
L_PAREN
IDENTIFIER(getBlockTree)
L_PAREN
R_PAREN
R_PAREN
COMMA
BITWISE_AND
IDENTIFIER(infos)
COMMA
BITWISE_AND
IDENTIFIER(nodeP)
R_PAREN
SEMICOLON
IDENTIFIER(ListNode)
MULTIPLY
IDENTIFIER(next)
ASSIGN
IDENTIFIER(node)
POINTER
IDENTIFIER(next)
SEMICOLON
IDENTIFIER(free)
L_PAREN
IDENTIFIER(node)
R_PAREN
SEMICOLON
IDENTIFIER(node)
ASSIGN
IDENTIFIER(next)
SEMICOLON
WHILE
L_PAREN
IDENTIFIER(node)
NOT_EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Block)
IDENTIFIER(block)
ASSIGN
IDENTIFIER(RBTree_Remove)
L_PAREN
IDENTIFIER(node)
POINTER
IDENTIFIER(tree)
COMMA
IDENTIFIER(Block_GetPoint)
L_PAREN
IDENTIFIER(node)
POINTER
IDENTIFIER(element)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(\n%s:)
STRING(\n\tPosição anterior: (%.2lf, %.2lf))
STRING(\n\tNova posição: (%.2lf, %.2lf))
COMMA
IDENTIFIER(Block_GetCep)
L_PAREN
IDENTIFIER(block)
R_PAREN
COMMA
IDENTIFIER(Block_GetX)
L_PAREN
IDENTIFIER(block)
R_PAREN
COMMA
IDENTIFIER(Block_GetY)
L_PAREN
IDENTIFIER(block)
R_PAREN
COMMA
IDENTIFIER(Block_GetX)
L_PAREN
IDENTIFIER(block)
R_PAREN
PLUS
IDENTIFIER(dx)
COMMA
IDENTIFIER(Block_GetY)
L_PAREN
IDENTIFIER(block)
R_PAREN
PLUS
IDENTIFIER(dy)
R_PAREN
SEMICOLON
IDENTIFIER(Block_SetX)
L_PAREN
IDENTIFIER(block)
COMMA
IDENTIFIER(Block_GetX)
L_PAREN
IDENTIFIER(block)
R_PAREN
PLUS
IDENTIFIER(dx)
R_PAREN
SEMICOLON
IDENTIFIER(Block_SetY)
L_PAREN
IDENTIFIER(block)
COMMA
IDENTIFIER(Block_GetY)
L_PAREN
IDENTIFIER(block)
R_PAREN
PLUS
IDENTIFIER(dy)
R_PAREN
SEMICOLON
IDENTIFIER(RBTree_Insert)
L_PAREN
IDENTIFIER(node)
POINTER
IDENTIFIER(tree)
COMMA
IDENTIFIER(Block_GetPoint)
L_PAREN
IDENTIFIER(block)
R_PAREN
COMMA
IDENTIFIER(block)
R_PAREN
SEMICOLON
IDENTIFIER(next)
ASSIGN
IDENTIFIER(node)
POINTER
IDENTIFIER(next)
SEMICOLON
IDENTIFIER(free)
L_PAREN
IDENTIFIER(node)
R_PAREN
SEMICOLON
IDENTIFIER(node)
ASSIGN
IDENTIFIER(next)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(node)
ASSIGN
IDENTIFIER(malloc)
L_PAREN
IDENTIFIER(sizeof)
L_PAREN
STRUCT
IDENTIFIER(list_node_t)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(node)
POINTER
IDENTIFIER(next)
ASSIGN
IDENTIFIER(NULL)
SEMICOLON
IDENTIFIER(nodeP)
ASSIGN
IDENTIFIER(node)
SEMICOLON
IDENTIFIER(_translateEquipTree)
L_PAREN
IDENTIFIER(getHydTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(RBTree_GetRoot)
L_PAREN
IDENTIFIER(getHydTree)
L_PAREN
R_PAREN
R_PAREN
COMMA
BITWISE_AND
IDENTIFIER(infos)
COMMA
BITWISE_AND
IDENTIFIER(nodeP)
R_PAREN
SEMICOLON
IDENTIFIER(_translateEquipTree)
L_PAREN
IDENTIFIER(getCTowerTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(RBTree_GetRoot)
L_PAREN
IDENTIFIER(getCTowerTree)
L_PAREN
R_PAREN
R_PAREN
COMMA
BITWISE_AND
IDENTIFIER(infos)
COMMA
BITWISE_AND
IDENTIFIER(nodeP)
R_PAREN
SEMICOLON
IDENTIFIER(_translateEquipTree)
L_PAREN
IDENTIFIER(getTLightTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(RBTree_GetRoot)
L_PAREN
IDENTIFIER(getTLightTree)
L_PAREN
R_PAREN
R_PAREN
COMMA
BITWISE_AND
IDENTIFIER(infos)
COMMA
BITWISE_AND
IDENTIFIER(nodeP)
R_PAREN
SEMICOLON
IDENTIFIER(next)
ASSIGN
IDENTIFIER(node)
POINTER
IDENTIFIER(next)
SEMICOLON
IDENTIFIER(free)
L_PAREN
IDENTIFIER(node)
R_PAREN
SEMICOLON
IDENTIFIER(node)
ASSIGN
IDENTIFIER(next)
SEMICOLON
WHILE
L_PAREN
IDENTIFIER(node)
NOT_EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Equip)
IDENTIFIER(equip)
ASSIGN
IDENTIFIER(RBTree_Remove)
L_PAREN
IDENTIFIER(node)
POINTER
IDENTIFIER(tree)
COMMA
IDENTIFIER(Equip_GetPoint)
L_PAREN
IDENTIFIER(node)
POINTER
IDENTIFIER(element)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(\n%s:)
STRING(\n\tPosição anterior: (%.2lf, %.2lf))
STRING(\n\tNova posição: (%.2lf, %.2lf))
COMMA
IDENTIFIER(Equip_GetID)
L_PAREN
IDENTIFIER(equip)
R_PAREN
COMMA
IDENTIFIER(Equip_GetX)
L_PAREN
IDENTIFIER(equip)
R_PAREN
COMMA
IDENTIFIER(Equip_GetY)
L_PAREN
IDENTIFIER(equip)
R_PAREN
COMMA
IDENTIFIER(Equip_GetX)
L_PAREN
IDENTIFIER(equip)
R_PAREN
PLUS
IDENTIFIER(dx)
COMMA
IDENTIFIER(Equip_GetY)
L_PAREN
IDENTIFIER(equip)
R_PAREN
PLUS
IDENTIFIER(dy)
R_PAREN
SEMICOLON
IDENTIFIER(Equip_SetX)
L_PAREN
IDENTIFIER(equip)
COMMA
IDENTIFIER(Equip_GetX)
L_PAREN
IDENTIFIER(equip)
R_PAREN
PLUS
IDENTIFIER(dx)
R_PAREN
SEMICOLON
IDENTIFIER(Equip_SetY)
L_PAREN
IDENTIFIER(equip)
COMMA
IDENTIFIER(Equip_GetY)
L_PAREN
IDENTIFIER(equip)
R_PAREN
PLUS
IDENTIFIER(dy)
R_PAREN
SEMICOLON
IDENTIFIER(RBTree_Insert)
L_PAREN
IDENTIFIER(node)
POINTER
IDENTIFIER(tree)
COMMA
IDENTIFIER(Equip_GetPoint)
L_PAREN
IDENTIFIER(equip)
R_PAREN
COMMA
IDENTIFIER(equip)
R_PAREN
SEMICOLON
IDENTIFIER(next)
ASSIGN
IDENTIFIER(node)
POINTER
IDENTIFIER(next)
SEMICOLON
IDENTIFIER(free)
L_PAREN
IDENTIFIER(node)
R_PAREN
SEMICOLON
IDENTIFIER(node)
ASSIGN
IDENTIFIER(next)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(\n\n)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(static)
INT
IDENTIFIER(compareDistancesDescending)
L_PAREN
IDENTIFIER(const)
VOID
MULTIPLY
IDENTIFIER(a)
COMMA
IDENTIFIER(const)
VOID
MULTIPLY
IDENTIFIER(b)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(double)
IDENTIFIER(d1)
ASSIGN
IDENTIFIER(Distance_GetDist)
L_PAREN
IDENTIFIER(a)
R_PAREN
SEMICOLON
IDENTIFIER(double)
IDENTIFIER(d2)
ASSIGN
IDENTIFIER(Distance_GetDist)
L_PAREN
IDENTIFIER(b)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(d1)
LESS_THAN
IDENTIFIER(d2)
TERNARY_CONDITIONAL
NUM_INTEGER(1)
COLON
IDENTIFIER(d1)
GREATER_THAN
IDENTIFIER(d2)
TERNARY_CONDITIONAL
MINUS
NUM_INTEGER(1)
COLON
NUM_INTEGER(0)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(static)
INT
IDENTIFIER(compareDistancesAscending)
L_PAREN
IDENTIFIER(const)
VOID
MULTIPLY
IDENTIFIER(a)
COMMA
IDENTIFIER(const)
VOID
MULTIPLY
IDENTIFIER(b)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(double)
IDENTIFIER(d1)
ASSIGN
IDENTIFIER(Distance_GetDist)
L_PAREN
IDENTIFIER(a)
R_PAREN
SEMICOLON
IDENTIFIER(double)
IDENTIFIER(d2)
ASSIGN
IDENTIFIER(Distance_GetDist)
L_PAREN
IDENTIFIER(b)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(d1)
GREATER_THAN
IDENTIFIER(d2)
TERNARY_CONDITIONAL
NUM_INTEGER(1)
COLON
IDENTIFIER(d1)
LESS_THAN
IDENTIFIER(d2)
TERNARY_CONDITIONAL
MINUS
NUM_INTEGER(1)
COLON
NUM_INTEGER(0)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(static)
VOID
IDENTIFIER(buildDistances)
L_PAREN
IDENTIFIER(RBTree)
IDENTIFIER(tree)
COMMA
IDENTIFIER(Node)
IDENTIFIER(node)
COMMA
IDENTIFIER(Distance)
MULTIPLY
MULTIPLY
IDENTIFIER(distances)
COMMA
INT
IDENTIFIER(x)
COMMA
INT
IDENTIFIER(y)
R_PAREN
L_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(node)
EQUAL
IDENTIFIER(NULL)
R_PAREN
RETURN
SEMICOLON
IDENTIFIER(buildDistances)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetLeftChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(distances)
COMMA
IDENTIFIER(x)
COMMA
IDENTIFIER(y)
R_PAREN
SEMICOLON
IDENTIFIER(Equip)
IDENTIFIER(equip)
ASSIGN
IDENTIFIER(RBTreeN_GetValue)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
SEMICOLON
IDENTIFIER(double)
IDENTIFIER(dist)
ASSIGN
IDENTIFIER(euclideanDistance)
L_PAREN
IDENTIFIER(Equip_GetX)
L_PAREN
IDENTIFIER(equip)
R_PAREN
COMMA
IDENTIFIER(Equip_GetY)
L_PAREN
IDENTIFIER(equip)
R_PAREN
COMMA
IDENTIFIER(x)
COMMA
IDENTIFIER(y)
R_PAREN
SEMICOLON
MULTIPLY
L_PAREN
L_PAREN
MULTIPLY
IDENTIFIER(distances)
R_PAREN
INC
R_PAREN
ASSIGN
IDENTIFIER(Distance_Create)
L_PAREN
IDENTIFIER(dist)
COMMA
IDENTIFIER(equip)
R_PAREN
SEMICOLON
IDENTIFIER(buildDistances)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetRightChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(distances)
COMMA
IDENTIFIER(x)
COMMA
IDENTIFIER(y)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(bool)
IDENTIFIER(Query_Fi)
L_PAREN
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(txtFile)
COMMA
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(outputFile)
COMMA
IDENTIFIER(double)
IDENTIFIER(x)
COMMA
IDENTIFIER(double)
IDENTIFIER(y)
COMMA
INT
IDENTIFIER(ns)
COMMA
IDENTIFIER(double)
IDENTIFIER(r)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Semáforos com a programação alterada:)
R_PAREN
SEMICOLON
INT
IDENTIFIER(n)
ASSIGN
IDENTIFIER(RBTree_GetLength)
L_PAREN
IDENTIFIER(getTLightTree)
L_PAREN
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(Distance)
MULTIPLY
IDENTIFIER(distances)
ASSIGN
IDENTIFIER(malloc)
L_PAREN
IDENTIFIER(n)
MULTIPLY
IDENTIFIER(sizeof)
L_PAREN
IDENTIFIER(Distance)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(Distance)
MULTIPLY
IDENTIFIER(distancesP)
ASSIGN
IDENTIFIER(distances)
SEMICOLON
IDENTIFIER(buildDistances)
L_PAREN
IDENTIFIER(getTLightTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(RBTree_GetRoot)
L_PAREN
IDENTIFIER(getTLightTree)
L_PAREN
R_PAREN
R_PAREN
COMMA
BITWISE_AND
IDENTIFIER(distancesP)
COMMA
IDENTIFIER(x)
COMMA
IDENTIFIER(y)
R_PAREN
SEMICOLON
IDENTIFIER(heapsort)
L_PAREN
IDENTIFIER(distances)
COMMA
IDENTIFIER(n)
COMMA
IDENTIFIER(ns)
COMMA
IDENTIFIER(compareDistancesDescending)
R_PAREN
SEMICOLON
INT
IDENTIFIER(limit)
ASSIGN
IDENTIFIER(n)
MINUS
IDENTIFIER(ns)
SEMICOLON
FOR
L_PAREN
INT
IDENTIFIER(i)
ASSIGN
IDENTIFIER(n)
MINUS
NUM_INTEGER(1)
SEMICOLON
IDENTIFIER(i)
GREATER_EQUAL
IDENTIFIER(limit)
SEMICOLON
IDENTIFIER(i)
DEC
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Equip)
IDENTIFIER(tLight)
ASSIGN
IDENTIFIER(Distance_GetEquip)
L_PAREN
IDENTIFIER(distances)
L_SQUARE_BRACKET
IDENTIFIER(i)
R_SQUARE_BRACKET
R_PAREN
SEMICOLON
IDENTIFIER(Equip_SetHighlighted)
L_PAREN
IDENTIFIER(tLight)
COMMA
IDENTIFIER(true)
R_PAREN
SEMICOLON
IDENTIFIER(putSVGLine)
L_PAREN
IDENTIFIER(outputFile)
COMMA
IDENTIFIER(x)
COMMA
IDENTIFIER(y)
COMMA
IDENTIFIER(Equip_GetX)
L_PAREN
IDENTIFIER(tLight)
R_PAREN
COMMA
IDENTIFIER(Equip_GetY)
L_PAREN
IDENTIFIER(tLight)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(\n\t- %s)
COMMA
IDENTIFIER(Equip_GetID)
L_PAREN
IDENTIFIER(tLight)
R_PAREN
R_PAREN
SEMICOLON
R_CURLY_BRACKET
FOR
L_PAREN
INT
IDENTIFIER(i)
ASSIGN
NUM_INTEGER(0)
SEMICOLON
IDENTIFIER(i)
LESS_THAN
IDENTIFIER(n)
SEMICOLON
IDENTIFIER(i)
INC
R_PAREN
IDENTIFIER(Distance_Destroy)
L_PAREN
IDENTIFIER(distances)
L_SQUARE_BRACKET
IDENTIFIER(i)
R_SQUARE_BRACKET
R_PAREN
SEMICOLON
IDENTIFIER(free)
L_PAREN
IDENTIFIER(distances)
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(\n)
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Hidrantes ativados:)
R_PAREN
SEMICOLON
FOR
L_PAREN
IDENTIFIER(Node)
IDENTIFIER(node)
ASSIGN
IDENTIFIER(RBTree_GetFirstNode)
L_PAREN
IDENTIFIER(getHydTree)
L_PAREN
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(node)
NOT_EQUAL
IDENTIFIER(NULL)
SEMICOLON
IDENTIFIER(node)
ASSIGN
IDENTIFIER(RBTreeN_GetSuccessor)
L_PAREN
IDENTIFIER(getHydTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(node)
R_PAREN
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Equip)
IDENTIFIER(hydrant)
ASSIGN
IDENTIFIER(RBTreeN_GetValue)
L_PAREN
IDENTIFIER(getHydTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(node)
R_PAREN
SEMICOLON
IDENTIFIER(double)
IDENTIFIER(dist)
ASSIGN
IDENTIFIER(euclideanDistance)
L_PAREN
IDENTIFIER(Equip_GetX)
L_PAREN
IDENTIFIER(hydrant)
R_PAREN
COMMA
IDENTIFIER(Equip_GetY)
L_PAREN
IDENTIFIER(hydrant)
R_PAREN
COMMA
IDENTIFIER(x)
COMMA
IDENTIFIER(y)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(dist)
LESS_EQUAL
IDENTIFIER(r)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Equip_SetHighlighted)
L_PAREN
IDENTIFIER(hydrant)
COMMA
IDENTIFIER(true)
R_PAREN
SEMICOLON
IDENTIFIER(putSVGLine)
L_PAREN
IDENTIFIER(outputFile)
COMMA
IDENTIFIER(x)
COMMA
IDENTIFIER(y)
COMMA
IDENTIFIER(Equip_GetX)
L_PAREN
IDENTIFIER(hydrant)
R_PAREN
COMMA
IDENTIFIER(Equip_GetY)
L_PAREN
IDENTIFIER(hydrant)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(\n\t- %s)
COMMA
IDENTIFIER(Equip_GetID)
L_PAREN
IDENTIFIER(hydrant)
R_PAREN
R_PAREN
SEMICOLON
R_CURLY_BRACKET
R_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(\n\n)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(bool)
IDENTIFIER(Query_Fh)
L_PAREN
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(txtFile)
COMMA
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(outputFile)
COMMA
CHAR
IDENTIFIER(signal)
COMMA
INT
IDENTIFIER(k)
COMMA
CHAR
IDENTIFIER(cep)
L_SQUARE_BRACKET
R_SQUARE_BRACKET
COMMA
CHAR
IDENTIFIER(face)
COMMA
IDENTIFIER(double)
IDENTIFIER(num)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Block)
IDENTIFIER(b)
ASSIGN
IDENTIFIER(HashTable_Find)
L_PAREN
IDENTIFIER(getBlockTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(cep)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(b)
EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
NUMBER_SIGN
IDENTIFIER(ifdef)
IDENTIFIER(__DEBUG__)
PRINTF
L_PAREN
STRING(Erro: Elemento não encontrado!\n)
R_PAREN
SEMICOLON
NUMBER_SIGN
IDENTIFIER(endif)
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Elemento não encontrado\n\n)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(double)
IDENTIFIER(x)
COMMA
IDENTIFIER(y)
SEMICOLON
IF
L_PAREN
NOT
IDENTIFIER(Block_GetCoordinates)
L_PAREN
IDENTIFIER(b)
COMMA
IDENTIFIER(face)
COMMA
IDENTIFIER(num)
COMMA
BITWISE_AND
IDENTIFIER(x)
COMMA
BITWISE_AND
IDENTIFIER(y)
R_PAREN
R_PAREN
L_CURLY_BRACKET
NUMBER_SIGN
IDENTIFIER(ifdef)
IDENTIFIER(__DEBUG__)
PRINTF
L_PAREN
STRING(Erro: Direção desconhecida: '%c'!\n)
COMMA
IDENTIFIER(face)
R_PAREN
SEMICOLON
NUMBER_SIGN
IDENTIFIER(endif)
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Direção desconhecida: '%c'\n\n)
COMMA
IDENTIFIER(face)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
INT
IDENTIFIER(n)
ASSIGN
IDENTIFIER(RBTree_GetLength)
L_PAREN
IDENTIFIER(getHydTree)
L_PAREN
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(Distance)
MULTIPLY
IDENTIFIER(distances)
ASSIGN
IDENTIFIER(malloc)
L_PAREN
IDENTIFIER(n)
MULTIPLY
IDENTIFIER(sizeof)
L_PAREN
IDENTIFIER(Distance)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(Distance)
MULTIPLY
IDENTIFIER(distancesP)
ASSIGN
IDENTIFIER(distances)
SEMICOLON
IDENTIFIER(buildDistances)
L_PAREN
IDENTIFIER(getHydTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(RBTree_GetRoot)
L_PAREN
IDENTIFIER(getHydTree)
L_PAREN
R_PAREN
R_PAREN
COMMA
BITWISE_AND
IDENTIFIER(distancesP)
COMMA
IDENTIFIER(x)
COMMA
IDENTIFIER(y)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(signal)
EQUAL
CHARACTER(+)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(%d hidrantes mais distantes:)
COMMA
IDENTIFIER(k)
R_PAREN
SEMICOLON
IDENTIFIER(heapsort)
L_PAREN
IDENTIFIER(distances)
COMMA
IDENTIFIER(n)
COMMA
IDENTIFIER(k)
COMMA
IDENTIFIER(compareDistancesAscending)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
ELSE
IF
L_PAREN
IDENTIFIER(signal)
EQUAL
CHARACTER(-)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(%d hidrantes mais próximos:)
COMMA
IDENTIFIER(k)
R_PAREN
SEMICOLON
IDENTIFIER(heapsort)
L_PAREN
IDENTIFIER(distances)
COMMA
IDENTIFIER(n)
COMMA
IDENTIFIER(k)
COMMA
IDENTIFIER(compareDistancesDescending)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
ELSE
L_CURLY_BRACKET
NUMBER_SIGN
IDENTIFIER(ifdef)
IDENTIFIER(__DEBUG__)
PRINTF
L_PAREN
STRING(Erro: Sinal desconhecido: '%c'!\n)
COMMA
IDENTIFIER(signal)
R_PAREN
SEMICOLON
NUMBER_SIGN
IDENTIFIER(endif)
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Sinal desconhecido: '%c'\n\n)
COMMA
IDENTIFIER(signal)
R_PAREN
SEMICOLON
IDENTIFIER(free)
L_PAREN
IDENTIFIER(distances)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
INT
IDENTIFIER(limit)
ASSIGN
IDENTIFIER(n)
MINUS
IDENTIFIER(k)
SEMICOLON
FOR
L_PAREN
INT
IDENTIFIER(i)
ASSIGN
IDENTIFIER(n)
MINUS
NUM_INTEGER(1)
SEMICOLON
IDENTIFIER(i)
GREATER_EQUAL
IDENTIFIER(limit)
SEMICOLON
IDENTIFIER(i)
DEC
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Equip)
IDENTIFIER(hyd)
ASSIGN
IDENTIFIER(Distance_GetEquip)
L_PAREN
IDENTIFIER(distances)
L_SQUARE_BRACKET
IDENTIFIER(i)
R_SQUARE_BRACKET
R_PAREN
SEMICOLON
IDENTIFIER(Equip_SetHighlighted)
L_PAREN
IDENTIFIER(hyd)
COMMA
IDENTIFIER(true)
R_PAREN
SEMICOLON
IDENTIFIER(putSVGLine)
L_PAREN
IDENTIFIER(outputFile)
COMMA
IDENTIFIER(x)
COMMA
IDENTIFIER(y)
COMMA
IDENTIFIER(Equip_GetX)
L_PAREN
IDENTIFIER(hyd)
R_PAREN
COMMA
IDENTIFIER(Equip_GetY)
L_PAREN
IDENTIFIER(hyd)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(\n\t- %s)
COMMA
IDENTIFIER(Equip_GetID)
L_PAREN
IDENTIFIER(hyd)
R_PAREN
R_PAREN
SEMICOLON
R_CURLY_BRACKET
FOR
L_PAREN
INT
IDENTIFIER(i)
ASSIGN
NUM_INTEGER(0)
SEMICOLON
IDENTIFIER(i)
LESS_THAN
IDENTIFIER(n)
SEMICOLON
IDENTIFIER(i)
INC
R_PAREN
IDENTIFIER(Distance_Destroy)
L_PAREN
IDENTIFIER(distances)
L_SQUARE_BRACKET
IDENTIFIER(i)
R_SQUARE_BRACKET
R_PAREN
SEMICOLON
IDENTIFIER(free)
L_PAREN
IDENTIFIER(distances)
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(\n\n)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(bool)
IDENTIFIER(Query_Fs)
L_PAREN
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(txtFile)
COMMA
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(outputFile)
COMMA
INT
IDENTIFIER(k)
COMMA
CHAR
IDENTIFIER(cep)
L_SQUARE_BRACKET
R_SQUARE_BRACKET
COMMA
CHAR
IDENTIFIER(face)
COMMA
IDENTIFIER(double)
IDENTIFIER(num)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Block)
IDENTIFIER(b)
ASSIGN
IDENTIFIER(HashTable_Find)
L_PAREN
IDENTIFIER(getBlockTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(cep)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(b)
EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
NUMBER_SIGN
IDENTIFIER(ifdef)
IDENTIFIER(__DEBUG__)
PRINTF
L_PAREN
STRING(Erro: Elemento não encontrado!\n)
R_PAREN
SEMICOLON
NUMBER_SIGN
IDENTIFIER(endif)
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Elemento não encontrado\n\n)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(double)
IDENTIFIER(x)
COMMA
IDENTIFIER(y)
SEMICOLON
IF
L_PAREN
NOT
IDENTIFIER(Block_GetCoordinates)
L_PAREN
IDENTIFIER(b)
COMMA
IDENTIFIER(face)
COMMA
IDENTIFIER(num)
COMMA
BITWISE_AND
IDENTIFIER(x)
COMMA
BITWISE_AND
IDENTIFIER(y)
R_PAREN
R_PAREN
L_CURLY_BRACKET
NUMBER_SIGN
IDENTIFIER(ifdef)
IDENTIFIER(__DEBUG__)
PRINTF
L_PAREN
STRING(Erro: Direção desconhecida: '%c'!\n)
COMMA
IDENTIFIER(face)
R_PAREN
SEMICOLON
NUMBER_SIGN
IDENTIFIER(endif)
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Direção desconhecida: '%c'\n\n)
COMMA
IDENTIFIER(face)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
INT
IDENTIFIER(n)
ASSIGN
IDENTIFIER(RBTree_GetLength)
L_PAREN
IDENTIFIER(getTLightTree)
L_PAREN
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(Distance)
MULTIPLY
IDENTIFIER(distances)
ASSIGN
IDENTIFIER(malloc)
L_PAREN
IDENTIFIER(n)
MULTIPLY
IDENTIFIER(sizeof)
L_PAREN
IDENTIFIER(Distance)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(Distance)
MULTIPLY
IDENTIFIER(distancesP)
ASSIGN
IDENTIFIER(distances)
SEMICOLON
IDENTIFIER(buildDistances)
L_PAREN
IDENTIFIER(getTLightTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(RBTree_GetRoot)
L_PAREN
IDENTIFIER(getTLightTree)
L_PAREN
R_PAREN
R_PAREN
COMMA
BITWISE_AND
IDENTIFIER(distancesP)
COMMA
IDENTIFIER(x)
COMMA
IDENTIFIER(y)
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(%d semáforos mais próximos:)
COMMA
IDENTIFIER(k)
R_PAREN
SEMICOLON
IDENTIFIER(heapsort)
L_PAREN
IDENTIFIER(distances)
COMMA
IDENTIFIER(n)
COMMA
IDENTIFIER(k)
COMMA
IDENTIFIER(compareDistancesDescending)
R_PAREN
SEMICOLON
INT
IDENTIFIER(limit)
ASSIGN
IDENTIFIER(n)
MINUS
IDENTIFIER(k)
SEMICOLON
FOR
L_PAREN
INT
IDENTIFIER(i)
ASSIGN
IDENTIFIER(n)
MINUS
NUM_INTEGER(1)
SEMICOLON
IDENTIFIER(i)
GREATER_EQUAL
IDENTIFIER(limit)
SEMICOLON
IDENTIFIER(i)
DEC
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Equip)
IDENTIFIER(hyd)
ASSIGN
IDENTIFIER(Distance_GetEquip)
L_PAREN
IDENTIFIER(distances)
L_SQUARE_BRACKET
IDENTIFIER(i)
R_SQUARE_BRACKET
R_PAREN
SEMICOLON
IDENTIFIER(Equip_SetHighlighted)
L_PAREN
IDENTIFIER(hyd)
COMMA
IDENTIFIER(true)
R_PAREN
SEMICOLON
IDENTIFIER(putSVGLine)
L_PAREN
IDENTIFIER(outputFile)
COMMA
IDENTIFIER(x)
COMMA
IDENTIFIER(y)
COMMA
IDENTIFIER(Equip_GetX)
L_PAREN
IDENTIFIER(hyd)
R_PAREN
COMMA
IDENTIFIER(Equip_GetY)
L_PAREN
IDENTIFIER(hyd)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(\n\t- %s)
COMMA
IDENTIFIER(Equip_GetID)
L_PAREN
IDENTIFIER(hyd)
R_PAREN
R_PAREN
SEMICOLON
R_CURLY_BRACKET
FOR
L_PAREN
INT
IDENTIFIER(i)
ASSIGN
NUM_INTEGER(0)
SEMICOLON
IDENTIFIER(i)
LESS_THAN
IDENTIFIER(n)
SEMICOLON
IDENTIFIER(i)
INC
R_PAREN
IDENTIFIER(Distance_Destroy)
L_PAREN
IDENTIFIER(distances)
L_SQUARE_BRACKET
IDENTIFIER(i)
R_SQUARE_BRACKET
R_PAREN
SEMICOLON
IDENTIFIER(free)
L_PAREN
IDENTIFIER(distances)
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(\n\n)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(bool)
IDENTIFIER(compareAddr)
L_PAREN
IDENTIFIER(Segment)
IDENTIFIER(s1)
COMMA
IDENTIFIER(Segment)
IDENTIFIER(s2)
R_PAREN
L_CURLY_BRACKET
RETURN
IDENTIFIER(s1)
EQUAL
IDENTIFIER(s2)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(bool)
IDENTIFIER(_pointVisibility)
L_PAREN
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(outputFile)
COMMA
IDENTIFIER(double)
IDENTIFIER(x)
COMMA
IDENTIFIER(double)
IDENTIFIER(y)
COMMA
IDENTIFIER(bool)
IDENTIFIER(buildings)
COMMA
IDENTIFIER(Polygon)
IDENTIFIER(poly)
R_PAREN
L_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(x)
EQUAL
NUM_INTEGER(0)
LOGICAL_AND
IDENTIFIER(y)
EQUAL
NUM_INTEGER(0)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Polygon_InsertPoint)
L_PAREN
IDENTIFIER(poly)
COMMA
NUM_INTEGER(0)
COMMA
NUM_INTEGER(0)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
INT
IDENTIFIER(nBuildings)
ASSIGN
IDENTIFIER(RBTree_GetLength)
L_PAREN
IDENTIFIER(getBuildingTree)
L_PAREN
R_PAREN
R_PAREN
SEMICOLON
INT
IDENTIFIER(nWalls)
ASSIGN
IDENTIFIER(RBTree_GetLength)
L_PAREN
IDENTIFIER(getWallTree)
L_PAREN
R_PAREN
R_PAREN
SEMICOLON
INT
IDENTIFIER(nSegments)
ASSIGN
IDENTIFIER(nBuildings)
MULTIPLY
NUM_INTEGER(4)
PLUS
IDENTIFIER(nWalls)
SEMICOLON
IDENTIFIER(Segment)
MULTIPLY
IDENTIFIER(segments)
ASSIGN
IDENTIFIER(malloc)
L_PAREN
L_PAREN
IDENTIFIER(nSegments)
MULTIPLY
NUM_INTEGER(2)
PLUS
NUM_INTEGER(5)
R_PAREN
MULTIPLY
IDENTIFIER(sizeof)
L_PAREN
IDENTIFIER(Segment)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(Segment)
MULTIPLY
IDENTIFIER(segmentsP)
ASSIGN
IDENTIFIER(segments)
SEMICOLON
IDENTIFIER(double)
IDENTIFIER(maxX)
ASSIGN
IDENTIFIER(x)
COMMA
IDENTIFIER(maxY)
ASSIGN
IDENTIFIER(y)
SEMICOLON
IF
L_PAREN
IDENTIFIER(buildings)
R_PAREN
L_CURLY_BRACKET
FOR
L_PAREN
IDENTIFIER(Node)
IDENTIFIER(node)
ASSIGN
IDENTIFIER(RBTree_GetFirstNode)
L_PAREN
IDENTIFIER(getBuildingTree)
L_PAREN
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(node)
NOT_EQUAL
IDENTIFIER(NULL)
SEMICOLON
IDENTIFIER(node)
ASSIGN
IDENTIFIER(RBTreeN_GetSuccessor)
L_PAREN
IDENTIFIER(getBuildingTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(node)
R_PAREN
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Building)
IDENTIFIER(b)
ASSIGN
IDENTIFIER(RBTreeN_GetValue)
L_PAREN
IDENTIFIER(getBuildingTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(node)
R_PAREN
SEMICOLON
IDENTIFIER(segmentsP)
ASSIGN
IDENTIFIER(Building_PutSegments)
L_PAREN
IDENTIFIER(b)
COMMA
IDENTIFIER(segmentsP)
COMMA
IDENTIFIER(x)
COMMA
IDENTIFIER(y)
R_PAREN
SEMICOLON
IDENTIFIER(double)
IDENTIFIER(blockMaxX)
ASSIGN
IDENTIFIER(Building_GetX)
L_PAREN
IDENTIFIER(b)
R_PAREN
PLUS
IDENTIFIER(Building_GetW)
L_PAREN
IDENTIFIER(b)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(blockMaxX)
GREATER_THAN
IDENTIFIER(maxX)
R_PAREN
IDENTIFIER(maxX)
ASSIGN
IDENTIFIER(blockMaxX)
SEMICOLON
IDENTIFIER(double)
IDENTIFIER(blockMaxY)
ASSIGN
IDENTIFIER(Building_GetY)
L_PAREN
IDENTIFIER(b)
R_PAREN
PLUS
IDENTIFIER(Building_GetH)
L_PAREN
IDENTIFIER(b)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(blockMaxY)
GREATER_THAN
IDENTIFIER(maxY)
R_PAREN
IDENTIFIER(maxY)
ASSIGN
IDENTIFIER(blockMaxY)
SEMICOLON
R_CURLY_BRACKET
R_CURLY_BRACKET
FOR
L_PAREN
IDENTIFIER(Node)
IDENTIFIER(node)
ASSIGN
IDENTIFIER(RBTree_GetFirstNode)
L_PAREN
IDENTIFIER(getWallTree)
L_PAREN
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(node)
NOT_EQUAL
IDENTIFIER(NULL)
SEMICOLON
IDENTIFIER(node)
ASSIGN
IDENTIFIER(RBTreeN_GetSuccessor)
L_PAREN
IDENTIFIER(getWallTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(node)
R_PAREN
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Wall)
IDENTIFIER(w)
ASSIGN
IDENTIFIER(RBTreeN_GetValue)
L_PAREN
IDENTIFIER(getWallTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(node)
R_PAREN
SEMICOLON
IDENTIFIER(segmentsP)
ASSIGN
IDENTIFIER(Wall_PutSegments)
L_PAREN
IDENTIFIER(w)
COMMA
IDENTIFIER(segmentsP)
COMMA
IDENTIFIER(x)
COMMA
IDENTIFIER(y)
R_PAREN
SEMICOLON
IDENTIFIER(double)
IDENTIFIER(wallMaxX)
ASSIGN
IDENTIFIER(max)
L_PAREN
IDENTIFIER(Wall_GetX1)
L_PAREN
IDENTIFIER(w)
R_PAREN
COMMA
IDENTIFIER(Wall_GetX2)
L_PAREN
IDENTIFIER(w)
R_PAREN
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(wallMaxX)
GREATER_THAN
IDENTIFIER(maxX)
R_PAREN
IDENTIFIER(maxX)
ASSIGN
IDENTIFIER(wallMaxX)
SEMICOLON
IDENTIFIER(double)
IDENTIFIER(wallMaxY)
ASSIGN
IDENTIFIER(max)
L_PAREN
IDENTIFIER(Wall_GetY1)
L_PAREN
IDENTIFIER(w)
R_PAREN
COMMA
IDENTIFIER(Wall_GetY2)
L_PAREN
IDENTIFIER(w)
R_PAREN
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(wallMaxY)
GREATER_THAN
IDENTIFIER(maxY)
R_PAREN
IDENTIFIER(maxY)
ASSIGN
IDENTIFIER(wallMaxY)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(maxX)
ADD_ASSIGN
NUM_INTEGER(100)
SEMICOLON
IDENTIFIER(maxY)
ADD_ASSIGN
NUM_INTEGER(100)
SEMICOLON
IDENTIFIER(Wall)
IDENTIFIER(borders)
L_SQUARE_BRACKET
NUM_INTEGER(4)
R_SQUARE_BRACKET
SEMICOLON
IDENTIFIER(borders)
L_SQUARE_BRACKET
NUM_INTEGER(0)
R_SQUARE_BRACKET
ASSIGN
IDENTIFIER(Wall_Create)
L_PAREN
NUM_INTEGER(0)
COMMA
NUM_INTEGER(0)
COMMA
IDENTIFIER(maxX)
COMMA
NUM_INTEGER(0)
R_PAREN
SEMICOLON
IDENTIFIER(borders)
L_SQUARE_BRACKET
NUM_INTEGER(1)
R_SQUARE_BRACKET
ASSIGN
IDENTIFIER(Wall_Create)
L_PAREN
IDENTIFIER(maxX)
COMMA
NUM_INTEGER(0)
COMMA
IDENTIFIER(maxX)
COMMA
IDENTIFIER(maxY)
R_PAREN
SEMICOLON
IDENTIFIER(borders)
L_SQUARE_BRACKET
NUM_INTEGER(2)
R_SQUARE_BRACKET
ASSIGN
IDENTIFIER(Wall_Create)
L_PAREN
IDENTIFIER(maxX)
COMMA
IDENTIFIER(maxY)
COMMA
NUM_INTEGER(0)
COMMA
IDENTIFIER(maxY)
R_PAREN
SEMICOLON
IDENTIFIER(borders)
L_SQUARE_BRACKET
NUM_INTEGER(3)
R_SQUARE_BRACKET
ASSIGN
IDENTIFIER(Wall_Create)
L_PAREN
NUM_INTEGER(0)
COMMA
IDENTIFIER(maxY)
COMMA
NUM_INTEGER(0)
COMMA
NUM_INTEGER(0)
R_PAREN
SEMICOLON
FOR
L_PAREN
INT
IDENTIFIER(i)
ASSIGN
NUM_INTEGER(0)
SEMICOLON
IDENTIFIER(i)
LESS_THAN
NUM_INTEGER(4)
SEMICOLON
IDENTIFIER(i)
INC
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(segmentsP)
ASSIGN
IDENTIFIER(Wall_PutSegments)
L_PAREN
IDENTIFIER(borders)
L_SQUARE_BRACKET
IDENTIFIER(i)
R_SQUARE_BRACKET
COMMA
IDENTIFIER(segmentsP)
COMMA
IDENTIFIER(x)
COMMA
IDENTIFIER(y)
R_PAREN
SEMICOLON
IDENTIFIER(Wall_Destroy)
L_PAREN
IDENTIFIER(borders)
L_SQUARE_BRACKET
IDENTIFIER(i)
R_SQUARE_BRACKET
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(nSegments)
ASSIGN
IDENTIFIER(segmentsP)
MINUS
IDENTIFIER(segments)
SEMICOLON
INT
IDENTIFIER(nVertexes)
ASSIGN
IDENTIFIER(nSegments)
MULTIPLY
NUM_INTEGER(2)
SEMICOLON
IDENTIFIER(Vertex)
MULTIPLY
IDENTIFIER(vertexes)
ASSIGN
IDENTIFIER(malloc)
L_PAREN
IDENTIFIER(nVertexes)
MULTIPLY
IDENTIFIER(sizeof)
L_PAREN
IDENTIFIER(Vertex)
R_PAREN
R_PAREN
SEMICOLON
FOR
L_PAREN
INT
IDENTIFIER(i)
ASSIGN
NUM_INTEGER(0)
SEMICOLON
IDENTIFIER(i)
LESS_THAN
IDENTIFIER(nSegments)
SEMICOLON
IDENTIFIER(i)
INC
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Segment)
IDENTIFIER(s)
ASSIGN
IDENTIFIER(segments)
L_SQUARE_BRACKET
IDENTIFIER(i)
R_SQUARE_BRACKET
SEMICOLON
IDENTIFIER(vertexes)
L_SQUARE_BRACKET
NUM_INTEGER(2)
MULTIPLY
IDENTIFIER(i)
R_SQUARE_BRACKET
ASSIGN
IDENTIFIER(Segment_GetPStart)
L_PAREN
IDENTIFIER(s)
R_PAREN
SEMICOLON
IDENTIFIER(vertexes)
L_SQUARE_BRACKET
NUM_INTEGER(2)
MULTIPLY
IDENTIFIER(i)
PLUS
NUM_INTEGER(1)
R_SQUARE_BRACKET
ASSIGN
IDENTIFIER(Segment_GetPEnd)
L_PAREN
IDENTIFIER(s)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(qsort)
L_PAREN
IDENTIFIER(vertexes)
COMMA
IDENTIFIER(nVertexes)
COMMA
IDENTIFIER(sizeof)
L_PAREN
IDENTIFIER(Vertex)
R_PAREN
COMMA
IDENTIFIER(Vertex_Compare)
R_PAREN
SEMICOLON
IDENTIFIER(RBTree)
IDENTIFIER(activeSegments)
ASSIGN
IDENTIFIER(RBTree_Create)
L_PAREN
IDENTIFIER(Vertex_Compare)
R_PAREN
SEMICOLON
FOR
L_PAREN
INT
IDENTIFIER(i)
ASSIGN
NUM_INTEGER(0)
SEMICOLON
IDENTIFIER(i)
LESS_THAN
IDENTIFIER(nVertexes)
SEMICOLON
IDENTIFIER(i)
INC
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Vertex)
IDENTIFIER(p)
ASSIGN
IDENTIFIER(vertexes)
L_SQUARE_BRACKET
IDENTIFIER(i)
R_SQUARE_BRACKET
SEMICOLON
IDENTIFIER(Segment)
IDENTIFIER(s)
ASSIGN
IDENTIFIER(Vertex_GetSegment)
L_PAREN
IDENTIFIER(p)
R_PAREN
SEMICOLON
IDENTIFIER(double)
IDENTIFIER(dist)
ASSIGN
IDENTIFIER(Vertex_GetDistance)
L_PAREN
IDENTIFIER(p)
R_PAREN
SEMICOLON
IDENTIFIER(double)
IDENTIFIER(a1)
SEMICOLON
IDENTIFIER(bool)
IDENTIFIER(vertical)
ASSIGN
IDENTIFIER(false)
SEMICOLON
IF
L_PAREN
IDENTIFIER(Vertex_GetX)
L_PAREN
IDENTIFIER(p)
R_PAREN
EQUAL
IDENTIFIER(x)
R_PAREN
IDENTIFIER(vertical)
ASSIGN
IDENTIFIER(true)
SEMICOLON
ELSE
IDENTIFIER(a1)
ASSIGN
L_PAREN
IDENTIFIER(Vertex_GetY)
L_PAREN
IDENTIFIER(p)
R_PAREN
MINUS
IDENTIFIER(y)
R_PAREN
DIV
L_PAREN
IDENTIFIER(Vertex_GetX)
L_PAREN
IDENTIFIER(p)
R_PAREN
MINUS
IDENTIFIER(x)
R_PAREN
SEMICOLON
IDENTIFIER(double)
IDENTIFIER(b1)
ASSIGN
IDENTIFIER(y)
MINUS
IDENTIFIER(a1)
MULTIPLY
IDENTIFIER(x)
SEMICOLON
IDENTIFIER(double)
IDENTIFIER(minDist)
ASSIGN
MINUS
NUM_INTEGER(1)
SEMICOLON
IDENTIFIER(Segment)
IDENTIFIER(closestSegmentBehind)
ASSIGN
IDENTIFIER(NULL)
SEMICOLON
IDENTIFIER(double)
IDENTIFIER(xInter)
COMMA
IDENTIFIER(yInter)
SEMICOLON
IDENTIFIER(bool)
IDENTIFIER(inFront)
ASSIGN
IDENTIFIER(true)
SEMICOLON
FOR
L_PAREN
IDENTIFIER(Node)
IDENTIFIER(node)
ASSIGN
IDENTIFIER(RBTree_GetFirstNode)
L_PAREN
IDENTIFIER(activeSegments)
R_PAREN
SEMICOLON
IDENTIFIER(node)
NOT_EQUAL
IDENTIFIER(NULL)
SEMICOLON
IDENTIFIER(node)
ASSIGN
IDENTIFIER(RBTreeN_GetSuccessor)
L_PAREN
IDENTIFIER(activeSegments)
COMMA
IDENTIFIER(node)
R_PAREN
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Segment)
IDENTIFIER(currentSegment)
ASSIGN
IDENTIFIER(RBTreeN_GetValue)
L_PAREN
IDENTIFIER(activeSegments)
COMMA
IDENTIFIER(node)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(currentSegment)
EQUAL
IDENTIFIER(s)
R_PAREN
IDENTIFIER(continue)
SEMICOLON
IDENTIFIER(Vertex)
IDENTIFIER(p1)
ASSIGN
IDENTIFIER(Segment_GetPStart)
L_PAREN
IDENTIFIER(currentSegment)
R_PAREN
SEMICOLON
IDENTIFIER(Vertex)
IDENTIFIER(p2)
ASSIGN
IDENTIFIER(Segment_GetPEnd)
L_PAREN
IDENTIFIER(currentSegment)
R_PAREN
SEMICOLON
IDENTIFIER(double)
IDENTIFIER(currentXInter)
COMMA
IDENTIFIER(currentYInter)
SEMICOLON
IF
L_PAREN
IDENTIFIER(Vertex_GetX)
L_PAREN
IDENTIFIER(p2)
R_PAREN
EQUAL
IDENTIFIER(Vertex_GetX)
L_PAREN
IDENTIFIER(p1)
R_PAREN
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(currentXInter)
ASSIGN
IDENTIFIER(Vertex_GetX)
L_PAREN
IDENTIFIER(p1)
R_PAREN
SEMICOLON
IDENTIFIER(currentYInter)
ASSIGN
IDENTIFIER(a1)
MULTIPLY
IDENTIFIER(currentXInter)
PLUS
IDENTIFIER(b1)
SEMICOLON
R_CURLY_BRACKET
ELSE
L_CURLY_BRACKET
IDENTIFIER(double)
IDENTIFIER(a2)
ASSIGN
L_PAREN
IDENTIFIER(Vertex_GetY)
L_PAREN
IDENTIFIER(p2)
R_PAREN
MINUS
IDENTIFIER(Vertex_GetY)
L_PAREN
IDENTIFIER(p1)
R_PAREN
R_PAREN
DIV
L_PAREN
IDENTIFIER(Vertex_GetX)
L_PAREN
IDENTIFIER(p2)
R_PAREN
MINUS
IDENTIFIER(Vertex_GetX)
L_PAREN
IDENTIFIER(p1)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(double)
IDENTIFIER(b2)
ASSIGN
IDENTIFIER(Vertex_GetY)
L_PAREN
IDENTIFIER(p1)
R_PAREN
MINUS
IDENTIFIER(a2)
MULTIPLY
IDENTIFIER(Vertex_GetX)
L_PAREN
IDENTIFIER(p1)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(vertical)
R_PAREN
IDENTIFIER(currentXInter)
ASSIGN
IDENTIFIER(Vertex_GetX)
L_PAREN
IDENTIFIER(p)
R_PAREN
SEMICOLON
ELSE
IDENTIFIER(currentXInter)
ASSIGN
L_PAREN
IDENTIFIER(b2)
MINUS
IDENTIFIER(b1)
R_PAREN
DIV
L_PAREN
IDENTIFIER(a1)
MINUS
IDENTIFIER(a2)
R_PAREN
SEMICOLON
IDENTIFIER(currentYInter)
ASSIGN
IDENTIFIER(a2)
MULTIPLY
IDENTIFIER(currentXInter)
PLUS
IDENTIFIER(b2)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(double)
IDENTIFIER(distInter)
ASSIGN
IDENTIFIER(euclideanDistance)
L_PAREN
IDENTIFIER(x)
COMMA
IDENTIFIER(y)
COMMA
IDENTIFIER(currentXInter)
COMMA
IDENTIFIER(currentYInter)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(distInter)
LESS_THAN
IDENTIFIER(dist)
LOGICAL_OR
IDENTIFIER(fabs)
L_PAREN
IDENTIFIER(distInter)
MINUS
IDENTIFIER(dist)
R_PAREN
LESS_THAN
NUM_INTEGER(0)
error:lexical:804:63: .
NUM_OCTAL(000001)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(inFront)
ASSIGN
IDENTIFIER(false)
SEMICOLON
BREAK
SEMICOLON
R_CURLY_BRACKET
ELSE
IF
L_PAREN
IDENTIFIER(distInter)
GREATER_EQUAL
IDENTIFIER(dist)
LOGICAL_AND
L_PAREN
IDENTIFIER(minDist)
EQUAL
MINUS
NUM_INTEGER(1)
LOGICAL_OR
IDENTIFIER(distInter)
LESS_EQUAL
IDENTIFIER(minDist)
R_PAREN
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(minDist)
ASSIGN
IDENTIFIER(distInter)
SEMICOLON
IDENTIFIER(closestSegmentBehind)
ASSIGN
IDENTIFIER(currentSegment)
SEMICOLON
IDENTIFIER(xInter)
ASSIGN
IDENTIFIER(currentXInter)
SEMICOLON
IDENTIFIER(yInter)
ASSIGN
IDENTIFIER(currentYInter)
SEMICOLON
R_CURLY_BRACKET
R_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(inFront)
R_PAREN
L_CURLY_BRACKET
IF
L_PAREN
NOT
IDENTIFIER(Vertex_IsStarting)
L_PAREN
IDENTIFIER(p)
R_PAREN
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(double)
IDENTIFIER(xBiombo)
ASSIGN
IDENTIFIER(Segment_GetXBiombo)
L_PAREN
IDENTIFIER(s)
R_PAREN
SEMICOLON
IDENTIFIER(double)
IDENTIFIER(yBiombo)
ASSIGN
IDENTIFIER(Segment_GetYBiombo)
L_PAREN
IDENTIFIER(s)
R_PAREN
SEMICOLON
IDENTIFIER(Polygon_InsertPoint)
L_PAREN
IDENTIFIER(poly)
COMMA
IDENTIFIER(xBiombo)
COMMA
IDENTIFIER(yBiombo)
R_PAREN
SEMICOLON
IDENTIFIER(Polygon_InsertPoint)
L_PAREN
IDENTIFIER(poly)
COMMA
IDENTIFIER(Vertex_GetX)
L_PAREN
IDENTIFIER(p)
R_PAREN
COMMA
IDENTIFIER(Vertex_GetY)
L_PAREN
IDENTIFIER(p)
R_PAREN
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(closestSegmentBehind)
NOT_EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Segment_SetXBiombo)
L_PAREN
IDENTIFIER(closestSegmentBehind)
COMMA
IDENTIFIER(xInter)
R_PAREN
SEMICOLON
IDENTIFIER(Segment_SetYBiombo)
L_PAREN
IDENTIFIER(closestSegmentBehind)
COMMA
IDENTIFIER(yInter)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
R_CURLY_BRACKET
ELSE
IF
L_PAREN
IDENTIFIER(closestSegmentBehind)
NOT_EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(double)
IDENTIFIER(xBiombo)
ASSIGN
IDENTIFIER(Segment_GetXBiombo)
L_PAREN
IDENTIFIER(closestSegmentBehind)
R_PAREN
SEMICOLON
IDENTIFIER(double)
IDENTIFIER(yBiombo)
ASSIGN
IDENTIFIER(Segment_GetYBiombo)
L_PAREN
IDENTIFIER(closestSegmentBehind)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(vertical)
LOGICAL_OR
IDENTIFIER(fabs)
L_PAREN
IDENTIFIER(a1)
MULTIPLY
IDENTIFIER(xBiombo)
PLUS
IDENTIFIER(b1)
MINUS
IDENTIFIER(yBiombo)
R_PAREN
GREATER_THAN
NUM_INTEGER(0)
error:lexical:841:70: .
NUM_OCTAL(00001)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Polygon_InsertPoint)
L_PAREN
IDENTIFIER(poly)
COMMA
IDENTIFIER(xBiombo)
COMMA
IDENTIFIER(yBiombo)
R_PAREN
SEMICOLON
IDENTIFIER(Polygon_InsertPoint)
L_PAREN
IDENTIFIER(poly)
COMMA
IDENTIFIER(xInter)
COMMA
IDENTIFIER(yInter)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
R_CURLY_BRACKET
R_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(Vertex_IsStarting)
L_PAREN
IDENTIFIER(p)
R_PAREN
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(RBTree_Insert)
L_PAREN
IDENTIFIER(activeSegments)
COMMA
IDENTIFIER(Segment_GetKey)
L_PAREN
IDENTIFIER(s)
R_PAREN
COMMA
IDENTIFIER(s)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
ELSE
L_CURLY_BRACKET
IDENTIFIER(RBTree_Remove)
L_PAREN
IDENTIFIER(activeSegments)
COMMA
IDENTIFIER(Segment_GetKey)
L_PAREN
IDENTIFIER(s)
R_PAREN
R_PAREN
SEMICOLON
R_CURLY_BRACKET
R_CURLY_BRACKET
IDENTIFIER(Polygon_Connect)
L_PAREN
IDENTIFIER(poly)
R_PAREN
SEMICOLON
IDENTIFIER(putSVGBomb)
L_PAREN
IDENTIFIER(outputFile)
COMMA
IDENTIFIER(x)
COMMA
IDENTIFIER(y)
R_PAREN
SEMICOLON
IDENTIFIER(free)
L_PAREN
IDENTIFIER(vertexes)
R_PAREN
SEMICOLON
IDENTIFIER(RBTree_Destroy)
L_PAREN
IDENTIFIER(activeSegments)
COMMA
IDENTIFIER(NULL)
R_PAREN
SEMICOLON
FOR
L_PAREN
INT
IDENTIFIER(i)
ASSIGN
NUM_INTEGER(0)
SEMICOLON
IDENTIFIER(i)
LESS_THAN
IDENTIFIER(nSegments)
SEMICOLON
IDENTIFIER(i)
INC
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Segment_Destroy)
L_PAREN
IDENTIFIER(segments)
L_SQUARE_BRACKET
IDENTIFIER(i)
R_SQUARE_BRACKET
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(free)
L_PAREN
IDENTIFIER(segments)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(bool)
IDENTIFIER(Query_Brl)
L_PAREN
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(outputFile)
COMMA
IDENTIFIER(double)
IDENTIFIER(x)
COMMA
IDENTIFIER(double)
IDENTIFIER(y)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Polygon)
IDENTIFIER(poly)
ASSIGN
IDENTIFIER(Polygon_Create)
L_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(_pointVisibility)
L_PAREN
IDENTIFIER(outputFile)
COMMA
IDENTIFIER(x)
COMMA
IDENTIFIER(y)
COMMA
IDENTIFIER(true)
COMMA
IDENTIFIER(poly)
R_PAREN
SEMICOLON
IDENTIFIER(putSVGPolygon)
L_PAREN
IDENTIFIER(outputFile)
COMMA
IDENTIFIER(poly)
COMMA
STRING(gold)
R_PAREN
SEMICOLON
IDENTIFIER(Polygon_Destroy)
L_PAREN
IDENTIFIER(poly)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(static)
INT
IDENTIFIER(_dumpBlockResidents)
L_PAREN
IDENTIFIER(RBTree)
IDENTIFIER(tree)
COMMA
IDENTIFIER(Node)
IDENTIFIER(node)
COMMA
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(file)
R_PAREN
L_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(node)
EQUAL
IDENTIFIER(NULL)
R_PAREN
RETURN
NUM_INTEGER(0)
SEMICOLON
INT
IDENTIFIER(i)
ASSIGN
NUM_INTEGER(1)
SEMICOLON
IDENTIFIER(i)
ADD_ASSIGN
IDENTIFIER(_dumpBlockResidents)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetLeftChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(file)
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(file)
COMMA
STRING(%d)\n)
COMMA
IDENTIFIER(i)
R_PAREN
SEMICOLON
IDENTIFIER(Person_DumpToFile)
L_PAREN
IDENTIFIER(RBTreeN_GetValue)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(file)
R_PAREN
SEMICOLON
IDENTIFIER(i)
ADD_ASSIGN
IDENTIFIER(_dumpBlockResidents)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetRightChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(file)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(i)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(static)
INT
IDENTIFIER(_dumpBuildingResidents)
L_PAREN
IDENTIFIER(RBTree)
IDENTIFIER(tree)
COMMA
IDENTIFIER(Node)
IDENTIFIER(node)
COMMA
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(file)
R_PAREN
L_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(node)
EQUAL
IDENTIFIER(NULL)
R_PAREN
RETURN
NUM_INTEGER(0)
SEMICOLON
INT
IDENTIFIER(i)
ASSIGN
NUM_INTEGER(1)
SEMICOLON
IDENTIFIER(i)
ADD_ASSIGN
IDENTIFIER(_dumpBuildingResidents)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetLeftChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(file)
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(file)
COMMA
STRING(%d)\n)
COMMA
IDENTIFIER(i)
R_PAREN
SEMICOLON
IDENTIFIER(Person_DumpToFile)
L_PAREN
IDENTIFIER(RBTreeN_GetValue)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(file)
R_PAREN
SEMICOLON
IDENTIFIER(i)
ADD_ASSIGN
IDENTIFIER(_dumpBuildingResidents)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetRightChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(file)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(i)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(static)
VOID
IDENTIFIER(_executeBrnBlocks)
L_PAREN
IDENTIFIER(RBTree)
IDENTIFIER(tree)
COMMA
IDENTIFIER(Node)
IDENTIFIER(node)
COMMA
IDENTIFIER(Polygon)
IDENTIFIER(polygon)
COMMA
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(txtFile)
R_PAREN
L_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(node)
EQUAL
IDENTIFIER(NULL)
R_PAREN
RETURN
SEMICOLON
IDENTIFIER(Block)
IDENTIFIER(block)
ASSIGN
IDENTIFIER(RBTreeN_GetValue)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(Block_GetX)
L_PAREN
IDENTIFIER(block)
R_PAREN
GREATER_EQUAL
IDENTIFIER(Polygon_GetMinX)
L_PAREN
IDENTIFIER(polygon)
R_PAREN
R_PAREN
IDENTIFIER(_executeBrnBlocks)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetLeftChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(polygon)
COMMA
IDENTIFIER(txtFile)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(Polygon_IsBlockInside)
L_PAREN
IDENTIFIER(polygon)
COMMA
IDENTIFIER(block)
COMMA
IDENTIFIER(true)
R_PAREN
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Moradores da quadra %s:\n)
COMMA
IDENTIFIER(Block_GetCep)
L_PAREN
IDENTIFIER(block)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(RBTree)
IDENTIFIER(residents)
ASSIGN
IDENTIFIER(Block_GetResidents)
L_PAREN
IDENTIFIER(block)
R_PAREN
SEMICOLON
INT
IDENTIFIER(total)
ASSIGN
IDENTIFIER(_dumpBlockResidents)
L_PAREN
IDENTIFIER(residents)
COMMA
IDENTIFIER(RBTree_GetRoot)
L_PAREN
IDENTIFIER(residents)
R_PAREN
COMMA
IDENTIFIER(txtFile)
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(TOTAL: %d\n)
COMMA
IDENTIFIER(total)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(Block_GetX)
L_PAREN
IDENTIFIER(block)
R_PAREN
LESS_EQUAL
IDENTIFIER(Polygon_GetMaxX)
L_PAREN
IDENTIFIER(polygon)
R_PAREN
R_PAREN
IDENTIFIER(_executeBrnBlocks)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetRightChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(polygon)
COMMA
IDENTIFIER(txtFile)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(static)
VOID
IDENTIFIER(_executeBrnBuildings)
L_PAREN
IDENTIFIER(RBTree)
IDENTIFIER(tree)
COMMA
IDENTIFIER(Node)
IDENTIFIER(node)
COMMA
IDENTIFIER(Polygon)
IDENTIFIER(polygon)
COMMA
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(txtFile)
R_PAREN
L_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(node)
EQUAL
IDENTIFIER(NULL)
R_PAREN
RETURN
SEMICOLON
IDENTIFIER(Building)
IDENTIFIER(building)
ASSIGN
IDENTIFIER(RBTreeN_GetValue)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(Building_GetX)
L_PAREN
IDENTIFIER(building)
R_PAREN
GREATER_EQUAL
IDENTIFIER(Polygon_GetMinX)
L_PAREN
IDENTIFIER(polygon)
R_PAREN
R_PAREN
IDENTIFIER(_executeBrnBuildings)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetLeftChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(polygon)
COMMA
IDENTIFIER(txtFile)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(Polygon_IsBuildingInside)
L_PAREN
IDENTIFIER(polygon)
COMMA
IDENTIFIER(building)
R_PAREN
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Moradores do predio %s:\n)
COMMA
IDENTIFIER(Building_GetKey)
L_PAREN
IDENTIFIER(building)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(RBTree)
IDENTIFIER(residents)
ASSIGN
IDENTIFIER(Building_GetResidents)
L_PAREN
IDENTIFIER(building)
R_PAREN
SEMICOLON
INT
IDENTIFIER(total)
ASSIGN
IDENTIFIER(_dumpBuildingResidents)
L_PAREN
IDENTIFIER(residents)
COMMA
IDENTIFIER(RBTree_GetRoot)
L_PAREN
IDENTIFIER(residents)
R_PAREN
COMMA
IDENTIFIER(txtFile)
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(TOTAL: %d\n)
COMMA
IDENTIFIER(total)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(Building_GetX)
L_PAREN
IDENTIFIER(building)
R_PAREN
LESS_EQUAL
IDENTIFIER(Polygon_GetMaxX)
L_PAREN
IDENTIFIER(polygon)
R_PAREN
R_PAREN
IDENTIFIER(_executeBrnBuildings)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetRightChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(polygon)
COMMA
IDENTIFIER(txtFile)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(static)
VOID
IDENTIFIER(_executeBrnNodes)
L_PAREN
IDENTIFIER(RBTree)
IDENTIFIER(tree)
COMMA
IDENTIFIER(Node)
IDENTIFIER(node)
COMMA
IDENTIFIER(Polygon)
IDENTIFIER(polygon)
R_PAREN
L_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(node)
EQUAL
IDENTIFIER(NULL)
R_PAREN
RETURN
SEMICOLON
IDENTIFIER(GraphNode)
IDENTIFIER(graphNode)
ASSIGN
IDENTIFIER(RBTreeN_GetValue)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
SEMICOLON
IDENTIFIER(_executeBrnNodes)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetLeftChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(polygon)
R_PAREN
SEMICOLON
IDENTIFIER(GraphNode_DestroyEdgesAffected)
L_PAREN
IDENTIFIER(graphNode)
COMMA
IDENTIFIER(polygon)
R_PAREN
SEMICOLON
IDENTIFIER(_executeBrnNodes)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetRightChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(polygon)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(bool)
IDENTIFIER(Query_Brn)
L_PAREN
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(txtFile)
COMMA
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(outputFile)
COMMA
IDENTIFIER(double)
IDENTIFIER(x)
COMMA
IDENTIFIER(double)
IDENTIFIER(y)
COMMA
CHAR
MULTIPLY
IDENTIFIER(outputDir)
COMMA
CHAR
MULTIPLY
IDENTIFIER(arqPol)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(polyFile)
ASSIGN
IDENTIFIER(openFile)
L_PAREN
IDENTIFIER(outputDir)
COMMA
IDENTIFIER(arqPol)
COMMA
STRING(w)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(polyFile)
EQUAL
IDENTIFIER(NULL)
R_PAREN
RETURN
IDENTIFIER(false)
SEMICOLON
IDENTIFIER(Polygon)
IDENTIFIER(poly)
ASSIGN
IDENTIFIER(Polygon_Create)
L_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(_pointVisibility)
L_PAREN
IDENTIFIER(outputFile)
COMMA
IDENTIFIER(x)
COMMA
IDENTIFIER(y)
COMMA
IDENTIFIER(false)
COMMA
IDENTIFIER(poly)
R_PAREN
SEMICOLON
IDENTIFIER(putSVGPolygon)
L_PAREN
IDENTIFIER(outputFile)
COMMA
IDENTIFIER(poly)
COMMA
STRING(gold)
R_PAREN
SEMICOLON
IDENTIFIER(Polygon_DumpToFile)
L_PAREN
IDENTIFIER(poly)
COMMA
IDENTIFIER(polyFile)
R_PAREN
SEMICOLON
IDENTIFIER(fclose)
L_PAREN
IDENTIFIER(polyFile)
R_PAREN
SEMICOLON
IDENTIFIER(_executeBrnBlocks)
L_PAREN
IDENTIFIER(getBlockTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(RBTree_GetRoot)
L_PAREN
IDENTIFIER(getBlockTree)
L_PAREN
R_PAREN
R_PAREN
COMMA
IDENTIFIER(poly)
COMMA
IDENTIFIER(txtFile)
R_PAREN
SEMICOLON
IDENTIFIER(_executeBrnBuildings)
L_PAREN
IDENTIFIER(getBuildingTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(RBTree_GetRoot)
L_PAREN
IDENTIFIER(getBuildingTree)
L_PAREN
R_PAREN
R_PAREN
COMMA
IDENTIFIER(poly)
COMMA
IDENTIFIER(txtFile)
R_PAREN
SEMICOLON
IDENTIFIER(_executeBrnNodes)
L_PAREN
IDENTIFIER(getNodeTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(RBTree_GetRoot)
L_PAREN
IDENTIFIER(getNodeTree)
L_PAREN
R_PAREN
R_PAREN
COMMA
IDENTIFIER(poly)
R_PAREN
SEMICOLON
IDENTIFIER(fputs)
L_PAREN
STRING(\n)
COMMA
IDENTIFIER(txtFile)
R_PAREN
SEMICOLON
IDENTIFIER(Polygon_Destroy)
L_PAREN
IDENTIFIER(poly)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(bool)
IDENTIFIER(Query_M)
L_PAREN
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(txtFile)
COMMA
CHAR
MULTIPLY
IDENTIFIER(cep)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Block)
IDENTIFIER(block)
ASSIGN
IDENTIFIER(HashTable_Find)
L_PAREN
IDENTIFIER(getBlockTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(cep)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(block)
EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Quadra de CEP %s não encontrada\n\n)
COMMA
IDENTIFIER(cep)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Moradores da quadra %s:\n)
COMMA
IDENTIFIER(cep)
R_PAREN
SEMICOLON
IDENTIFIER(RBTree)
IDENTIFIER(residents)
ASSIGN
IDENTIFIER(Block_GetResidents)
L_PAREN
IDENTIFIER(block)
R_PAREN
SEMICOLON
INT
IDENTIFIER(total)
ASSIGN
IDENTIFIER(_dumpBlockResidents)
L_PAREN
IDENTIFIER(residents)
COMMA
IDENTIFIER(RBTree_GetRoot)
L_PAREN
IDENTIFIER(residents)
R_PAREN
COMMA
IDENTIFIER(txtFile)
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(TOTAL: %d\n)
COMMA
IDENTIFIER(total)
R_PAREN
SEMICOLON
IDENTIFIER(fputs)
L_PAREN
STRING(\n)
COMMA
IDENTIFIER(txtFile)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(static)
VOID
IDENTIFIER(_executeMplgBlocks)
L_PAREN
IDENTIFIER(RBTree)
IDENTIFIER(tree)
COMMA
IDENTIFIER(Node)
IDENTIFIER(node)
COMMA
IDENTIFIER(Polygon)
IDENTIFIER(polygon)
COMMA
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(outputFile)
R_PAREN
L_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(node)
EQUAL
IDENTIFIER(NULL)
R_PAREN
RETURN
SEMICOLON
IDENTIFIER(Block)
IDENTIFIER(block)
ASSIGN
IDENTIFIER(RBTreeN_GetValue)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(Block_GetX)
L_PAREN
IDENTIFIER(block)
R_PAREN
GREATER_EQUAL
IDENTIFIER(Polygon_GetMinX)
L_PAREN
IDENTIFIER(polygon)
R_PAREN
R_PAREN
IDENTIFIER(_executeMplgBlocks)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetLeftChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(polygon)
COMMA
IDENTIFIER(outputFile)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(Polygon_IsBlockInside)
L_PAREN
IDENTIFIER(polygon)
COMMA
IDENTIFIER(block)
COMMA
IDENTIFIER(true)
R_PAREN
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Block_SetWStroke)
L_PAREN
IDENTIFIER(block)
COMMA
STRING(4.00000)
R_PAREN
SEMICOLON
IDENTIFIER(RBTree)
IDENTIFIER(residents)
ASSIGN
IDENTIFIER(Block_GetResidents)
L_PAREN
IDENTIFIER(block)
R_PAREN
SEMICOLON
INT
IDENTIFIER(total)
ASSIGN
IDENTIFIER(RBTree_GetLength)
L_PAREN
IDENTIFIER(residents)
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(outputFile)
COMMA
STRING(<text x=\"%lf\" y=\"%lf\" text-anchor=\"middle\" )
STRING(dominant-baseline=\"middle\" font-size=\"20\">%d</text>)
COMMA
IDENTIFIER(Block_GetX)
L_PAREN
IDENTIFIER(block)
R_PAREN
PLUS
IDENTIFIER(Block_GetW)
L_PAREN
IDENTIFIER(block)
R_PAREN
DIV
NUM_INTEGER(2)
COMMA
IDENTIFIER(Block_GetY)
L_PAREN
IDENTIFIER(block)
R_PAREN
PLUS
IDENTIFIER(Block_GetH)
L_PAREN
IDENTIFIER(block)
R_PAREN
DIV
NUM_INTEGER(2)
COMMA
IDENTIFIER(total)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(Block_GetX)
L_PAREN
IDENTIFIER(block)
R_PAREN
PLUS
IDENTIFIER(Block_GetW)
L_PAREN
IDENTIFIER(block)
R_PAREN
LESS_EQUAL
IDENTIFIER(Polygon_GetMaxX)
L_PAREN
IDENTIFIER(polygon)
R_PAREN
R_PAREN
IDENTIFIER(_executeMplgBlocks)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetRightChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(polygon)
COMMA
IDENTIFIER(outputFile)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(static)
VOID
IDENTIFIER(_executeMplgBuildings)
L_PAREN
IDENTIFIER(RBTree)
IDENTIFIER(tree)
COMMA
IDENTIFIER(Node)
IDENTIFIER(node)
COMMA
IDENTIFIER(Polygon)
IDENTIFIER(polygon)
COMMA
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(txtFile)
R_PAREN
L_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(node)
EQUAL
IDENTIFIER(NULL)
R_PAREN
RETURN
SEMICOLON
IDENTIFIER(Building)
IDENTIFIER(building)
ASSIGN
IDENTIFIER(RBTreeN_GetValue)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(Building_GetX)
L_PAREN
IDENTIFIER(building)
R_PAREN
GREATER_EQUAL
IDENTIFIER(Polygon_GetMinX)
L_PAREN
IDENTIFIER(polygon)
R_PAREN
R_PAREN
IDENTIFIER(_executeMplgBuildings)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetLeftChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(polygon)
COMMA
IDENTIFIER(txtFile)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(Polygon_IsBuildingInside)
L_PAREN
IDENTIFIER(polygon)
COMMA
IDENTIFIER(building)
R_PAREN
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Moradores do predio %s:\n)
COMMA
IDENTIFIER(Building_GetKey)
L_PAREN
IDENTIFIER(building)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(RBTree)
IDENTIFIER(residents)
ASSIGN
IDENTIFIER(Building_GetResidents)
L_PAREN
IDENTIFIER(building)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(RBTree_GetLength)
L_PAREN
IDENTIFIER(residents)
R_PAREN
GREATER_THAN
NUM_INTEGER(0)
R_PAREN
IDENTIFIER(Building_SetPainted)
L_PAREN
IDENTIFIER(building)
COMMA
IDENTIFIER(true)
R_PAREN
SEMICOLON
INT
IDENTIFIER(total)
ASSIGN
IDENTIFIER(_dumpBuildingResidents)
L_PAREN
IDENTIFIER(residents)
COMMA
IDENTIFIER(RBTree_GetRoot)
L_PAREN
IDENTIFIER(residents)
R_PAREN
COMMA
IDENTIFIER(txtFile)
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(TOTAL: %d\n)
COMMA
IDENTIFIER(total)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(Building_GetX)
L_PAREN
IDENTIFIER(building)
R_PAREN
PLUS
IDENTIFIER(Building_GetW)
L_PAREN
IDENTIFIER(building)
R_PAREN
LESS_EQUAL
IDENTIFIER(Polygon_GetMaxX)
L_PAREN
IDENTIFIER(polygon)
R_PAREN
R_PAREN
IDENTIFIER(_executeMplgBuildings)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetRightChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(polygon)
COMMA
IDENTIFIER(txtFile)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(bool)
IDENTIFIER(Query_Mplg)
L_PAREN
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(txtFile)
COMMA
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(outputFile)
COMMA
CHAR
MULTIPLY
IDENTIFIER(baseDir)
COMMA
CHAR
MULTIPLY
IDENTIFIER(arqPolig)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(polyFile)
ASSIGN
IDENTIFIER(openFile)
L_PAREN
IDENTIFIER(baseDir)
COMMA
IDENTIFIER(arqPolig)
COMMA
STRING(r)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(polyFile)
EQUAL
IDENTIFIER(NULL)
R_PAREN
RETURN
IDENTIFIER(false)
SEMICOLON
IDENTIFIER(Polygon)
IDENTIFIER(poly)
ASSIGN
IDENTIFIER(Polygon_Create)
L_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(Polygon_ReadFromFile)
L_PAREN
IDENTIFIER(poly)
COMMA
IDENTIFIER(polyFile)
R_PAREN
SEMICOLON
IDENTIFIER(fclose)
L_PAREN
IDENTIFIER(polyFile)
R_PAREN
SEMICOLON
IDENTIFIER(_executeMplgBlocks)
L_PAREN
IDENTIFIER(getBlockTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(RBTree_GetRoot)
L_PAREN
IDENTIFIER(getBlockTree)
L_PAREN
R_PAREN
R_PAREN
COMMA
IDENTIFIER(poly)
COMMA
IDENTIFIER(outputFile)
R_PAREN
SEMICOLON
IDENTIFIER(_executeMplgBuildings)
L_PAREN
IDENTIFIER(getBuildingTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(RBTree_GetRoot)
L_PAREN
IDENTIFIER(getBuildingTree)
L_PAREN
R_PAREN
R_PAREN
COMMA
IDENTIFIER(poly)
COMMA
IDENTIFIER(txtFile)
R_PAREN
SEMICOLON
IDENTIFIER(Polygon_Destroy)
L_PAREN
IDENTIFIER(poly)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(bool)
IDENTIFIER(Query_Dm)
L_PAREN
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(txtFile)
COMMA
CHAR
MULTIPLY
IDENTIFIER(cpf)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Person)
IDENTIFIER(person)
ASSIGN
IDENTIFIER(HashTable_Find)
L_PAREN
IDENTIFIER(getPersonTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(cpf)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(person)
EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(fputs)
L_PAREN
STRING(Morador não encontrado\n\n)
COMMA
IDENTIFIER(txtFile)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Dados do morador: \n)
R_PAREN
SEMICOLON
IDENTIFIER(Person_DumpToFile)
L_PAREN
IDENTIFIER(person)
COMMA
IDENTIFIER(txtFile)
R_PAREN
SEMICOLON
IDENTIFIER(fputs)
L_PAREN
STRING(\n)
COMMA
IDENTIFIER(txtFile)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(bool)
IDENTIFIER(Query_De)
L_PAREN
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(txtFile)
COMMA
CHAR
MULTIPLY
IDENTIFIER(cnpj)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Commerce)
IDENTIFIER(commerce)
ASSIGN
IDENTIFIER(HashTable_Find)
L_PAREN
IDENTIFIER(getCommerceTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(cnpj)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(commerce)
EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(fputs)
L_PAREN
STRING(Estabelecimento não encontrado\n\n)
COMMA
IDENTIFIER(txtFile)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(Commerce_DumpToFile)
L_PAREN
IDENTIFIER(commerce)
COMMA
IDENTIFIER(txtFile)
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Dados do proprietário:\n)
R_PAREN
SEMICOLON
IDENTIFIER(Person_DumpToFile)
L_PAREN
IDENTIFIER(Commerce_GetOwner)
L_PAREN
IDENTIFIER(commerce)
R_PAREN
COMMA
IDENTIFIER(txtFile)
R_PAREN
SEMICOLON
IDENTIFIER(fputs)
L_PAREN
STRING(\n)
COMMA
IDENTIFIER(txtFile)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(bool)
IDENTIFIER(Query_Mud)
L_PAREN
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(txtFile)
COMMA
CHAR
MULTIPLY
IDENTIFIER(cpf)
COMMA
CHAR
MULTIPLY
IDENTIFIER(cep)
COMMA
CHAR
IDENTIFIER(face)
COMMA
INT
IDENTIFIER(num)
COMMA
CHAR
MULTIPLY
IDENTIFIER(compl)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Person)
IDENTIFIER(person)
ASSIGN
IDENTIFIER(HashTable_Find)
L_PAREN
IDENTIFIER(getPersonTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(cpf)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(person)
EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(fputs)
L_PAREN
STRING(Morador não encontrado\n\n)
COMMA
IDENTIFIER(txtFile)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
CHAR
IDENTIFIER(address)
L_SQUARE_BRACKET
NUM_INTEGER(64)
R_SQUARE_BRACKET
SEMICOLON
IDENTIFIER(Building_MakeAddress)
L_PAREN
IDENTIFIER(address)
COMMA
IDENTIFIER(cep)
COMMA
IDENTIFIER(face)
COMMA
IDENTIFIER(num)
R_PAREN
SEMICOLON
IDENTIFIER(Block)
IDENTIFIER(newBlock)
ASSIGN
IDENTIFIER(HashTable_Find)
L_PAREN
IDENTIFIER(getBlockTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(cep)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(newBlock)
EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Quadra de CEP %s não encontrada\n\n)
COMMA
IDENTIFIER(cep)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(Building)
IDENTIFIER(newBuilding)
ASSIGN
IDENTIFIER(RBTree_Find)
L_PAREN
IDENTIFIER(Block_GetBuildings)
L_PAREN
IDENTIFIER(newBlock)
R_PAREN
COMMA
IDENTIFIER(address)
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Dados do morador da mudança: \n)
R_PAREN
SEMICOLON
IDENTIFIER(Person_DumpToFile)
L_PAREN
IDENTIFIER(person)
COMMA
IDENTIFIER(txtFile)
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(\tNovo endereço: %s %s\n\n)
COMMA
IDENTIFIER(address)
COMMA
IDENTIFIER(compl)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(Person_GetBuilding)
L_PAREN
IDENTIFIER(person)
R_PAREN
NOT_EQUAL
IDENTIFIER(NULL)
R_PAREN
IDENTIFIER(Building_RemoveResident)
L_PAREN
IDENTIFIER(Person_GetBuilding)
L_PAREN
IDENTIFIER(person)
R_PAREN
COMMA
IDENTIFIER(person)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(Person_GetBlock)
L_PAREN
IDENTIFIER(person)
R_PAREN
NOT_EQUAL
IDENTIFIER(NULL)
R_PAREN
IDENTIFIER(Block_RemoveResident)
L_PAREN
IDENTIFIER(Person_GetBlock)
L_PAREN
IDENTIFIER(person)
R_PAREN
COMMA
IDENTIFIER(person)
R_PAREN
SEMICOLON
IDENTIFIER(Person_SetBlock)
L_PAREN
IDENTIFIER(person)
COMMA
IDENTIFIER(newBlock)
R_PAREN
SEMICOLON
IDENTIFIER(Person_SetBuilding)
L_PAREN
IDENTIFIER(person)
COMMA
IDENTIFIER(newBuilding)
R_PAREN
SEMICOLON
IDENTIFIER(Person_SetAddress)
L_PAREN
IDENTIFIER(person)
COMMA
IDENTIFIER(address)
R_PAREN
SEMICOLON
IDENTIFIER(Person_SetComplement)
L_PAREN
IDENTIFIER(person)
COMMA
IDENTIFIER(compl)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(newBuilding)
NOT_EQUAL
IDENTIFIER(NULL)
R_PAREN
IDENTIFIER(Building_InsertResident)
L_PAREN
IDENTIFIER(newBuilding)
COMMA
IDENTIFIER(person)
R_PAREN
SEMICOLON
IDENTIFIER(Block_InsertResident)
L_PAREN
IDENTIFIER(newBlock)
COMMA
IDENTIFIER(person)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(static)
INT
IDENTIFIER(_dumpCommerces)
L_PAREN
IDENTIFIER(RBTree)
IDENTIFIER(tree)
COMMA
IDENTIFIER(Node)
IDENTIFIER(node)
COMMA
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(file)
COMMA
CHAR
MULTIPLY
IDENTIFIER(type)
COMMA
IDENTIFIER(bool)
IDENTIFIER(isBuilding)
R_PAREN
L_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(node)
EQUAL
IDENTIFIER(NULL)
R_PAREN
RETURN
NUM_INTEGER(0)
SEMICOLON
INT
IDENTIFIER(i)
ASSIGN
NUM_INTEGER(0)
SEMICOLON
IDENTIFIER(i)
ADD_ASSIGN
IDENTIFIER(_dumpCommerces)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetLeftChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(file)
COMMA
IDENTIFIER(type)
COMMA
IDENTIFIER(isBuilding)
R_PAREN
SEMICOLON
IDENTIFIER(Commerce)
IDENTIFIER(commerce)
ASSIGN
IDENTIFIER(RBTreeN_GetValue)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
SEMICOLON
IDENTIFIER(CommerceType)
IDENTIFIER(commType)
ASSIGN
IDENTIFIER(Commerce_GetType)
L_PAREN
IDENTIFIER(commerce)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(strcmp)
L_PAREN
IDENTIFIER(type)
COMMA
STRING(*)
R_PAREN
EQUAL
NUM_INTEGER(0)
LOGICAL_OR
IDENTIFIER(strcmp)
L_PAREN
IDENTIFIER(type)
COMMA
IDENTIFIER(CommerceType_GetCode)
L_PAREN
IDENTIFIER(commType)
R_PAREN
R_PAREN
EQUAL
NUM_INTEGER(0)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(i)
INC
SEMICOLON
IF
L_PAREN
IDENTIFIER(isBuilding)
LOGICAL_OR
IDENTIFIER(Commerce_GetBuilding)
L_PAREN
IDENTIFIER(commerce)
R_PAREN
EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(file)
COMMA
STRING(%d)\n)
COMMA
IDENTIFIER(i)
R_PAREN
SEMICOLON
IDENTIFIER(Commerce_DumpToFile)
L_PAREN
IDENTIFIER(commerce)
COMMA
IDENTIFIER(file)
R_PAREN
SEMICOLON
IDENTIFIER(Person)
IDENTIFIER(owner)
ASSIGN
IDENTIFIER(Commerce_GetOwner)
L_PAREN
IDENTIFIER(commerce)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(owner)
NOT_EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(file)
COMMA
STRING(\tNome do proprietário: %s\n)
COMMA
IDENTIFIER(Person_GetName)
L_PAREN
IDENTIFIER(owner)
R_PAREN
R_PAREN
SEMICOLON
R_CURLY_BRACKET
R_CURLY_BRACKET
R_CURLY_BRACKET
IDENTIFIER(i)
ADD_ASSIGN
IDENTIFIER(_dumpCommerces)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetRightChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(file)
COMMA
IDENTIFIER(type)
COMMA
IDENTIFIER(isBuilding)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(i)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(static)
VOID
IDENTIFIER(_executeEplgBlocks)
L_PAREN
IDENTIFIER(RBTree)
IDENTIFIER(tree)
COMMA
IDENTIFIER(Node)
IDENTIFIER(node)
COMMA
IDENTIFIER(Polygon)
IDENTIFIER(polygon)
COMMA
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(txtFile)
COMMA
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(outputFile)
COMMA
CHAR
MULTIPLY
IDENTIFIER(type)
R_PAREN
L_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(node)
EQUAL
IDENTIFIER(NULL)
R_PAREN
RETURN
SEMICOLON
IDENTIFIER(Block)
IDENTIFIER(block)
ASSIGN
IDENTIFIER(RBTreeN_GetValue)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(Block_GetX)
L_PAREN
IDENTIFIER(block)
R_PAREN
GREATER_EQUAL
IDENTIFIER(Polygon_GetMinX)
L_PAREN
IDENTIFIER(polygon)
R_PAREN
R_PAREN
IDENTIFIER(_executeEplgBlocks)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetLeftChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(polygon)
COMMA
IDENTIFIER(txtFile)
COMMA
IDENTIFIER(outputFile)
COMMA
IDENTIFIER(type)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(Polygon_IsBlockInside)
L_PAREN
IDENTIFIER(polygon)
COMMA
IDENTIFIER(block)
COMMA
IDENTIFIER(false)
R_PAREN
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(RBTree)
IDENTIFIER(commerces)
ASSIGN
IDENTIFIER(Block_GetCommerces)
L_PAREN
IDENTIFIER(block)
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Estabelecimentos comerciais do tipo %s na quadra %s:\n)
COMMA
IDENTIFIER(type)
COMMA
IDENTIFIER(Block_GetCep)
L_PAREN
IDENTIFIER(block)
R_PAREN
R_PAREN
SEMICOLON
INT
IDENTIFIER(total)
ASSIGN
IDENTIFIER(_dumpCommerces)
L_PAREN
IDENTIFIER(commerces)
COMMA
IDENTIFIER(RBTree_GetRoot)
L_PAREN
IDENTIFIER(commerces)
R_PAREN
COMMA
IDENTIFIER(txtFile)
COMMA
IDENTIFIER(type)
COMMA
IDENTIFIER(false)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(total)
GREATER_THAN
NUM_INTEGER(0)
R_PAREN
L_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(strcmp)
L_PAREN
IDENTIFIER(Block_GetCFill)
L_PAREN
IDENTIFIER(block)
R_PAREN
COMMA
STRING(darkolivegreen)
R_PAREN
EQUAL
NUM_INTEGER(0)
R_PAREN
IDENTIFIER(Block_SetCFill)
L_PAREN
IDENTIFIER(block)
COMMA
STRING(indigo)
R_PAREN
SEMICOLON
ELSE
IDENTIFIER(Block_SetCFill)
L_PAREN
IDENTIFIER(block)
COMMA
STRING(darkolivegreen)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
R_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(Block_GetX)
L_PAREN
IDENTIFIER(block)
R_PAREN
PLUS
IDENTIFIER(Block_GetW)
L_PAREN
IDENTIFIER(block)
R_PAREN
LESS_EQUAL
IDENTIFIER(Polygon_GetMaxX)
L_PAREN
IDENTIFIER(polygon)
R_PAREN
R_PAREN
IDENTIFIER(_executeEplgBlocks)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetRightChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(polygon)
COMMA
IDENTIFIER(txtFile)
COMMA
IDENTIFIER(outputFile)
COMMA
IDENTIFIER(type)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(static)
VOID
IDENTIFIER(_executeEplgBuildings)
L_PAREN
IDENTIFIER(RBTree)
IDENTIFIER(tree)
COMMA
IDENTIFIER(Node)
IDENTIFIER(node)
COMMA
IDENTIFIER(Polygon)
IDENTIFIER(polygon)
COMMA
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(txtFile)
COMMA
CHAR
MULTIPLY
IDENTIFIER(type)
R_PAREN
L_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(node)
EQUAL
IDENTIFIER(NULL)
R_PAREN
RETURN
SEMICOLON
IDENTIFIER(Building)
IDENTIFIER(building)
ASSIGN
IDENTIFIER(RBTreeN_GetValue)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(Building_GetX)
L_PAREN
IDENTIFIER(building)
R_PAREN
GREATER_EQUAL
IDENTIFIER(Polygon_GetMinX)
L_PAREN
IDENTIFIER(polygon)
R_PAREN
R_PAREN
IDENTIFIER(_executeEplgBuildings)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetLeftChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(polygon)
COMMA
IDENTIFIER(txtFile)
COMMA
IDENTIFIER(type)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(Polygon_IsBuildingInside)
L_PAREN
IDENTIFIER(polygon)
COMMA
IDENTIFIER(building)
R_PAREN
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Estabelecimentos comerciais do tipo %s no prédio %s:\n)
COMMA
IDENTIFIER(type)
COMMA
IDENTIFIER(Building_GetKey)
L_PAREN
IDENTIFIER(building)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(RBTree)
IDENTIFIER(commerces)
ASSIGN
IDENTIFIER(Building_GetCommerces)
L_PAREN
IDENTIFIER(building)
R_PAREN
SEMICOLON
INT
IDENTIFIER(total)
ASSIGN
IDENTIFIER(_dumpCommerces)
L_PAREN
IDENTIFIER(commerces)
COMMA
IDENTIFIER(RBTree_GetRoot)
L_PAREN
IDENTIFIER(commerces)
R_PAREN
COMMA
IDENTIFIER(txtFile)
COMMA
IDENTIFIER(type)
COMMA
IDENTIFIER(true)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(total)
GREATER_THAN
NUM_INTEGER(0)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Building_SetHighlighted)
L_PAREN
IDENTIFIER(building)
COMMA
IDENTIFIER(true)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
R_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(Building_GetX)
L_PAREN
IDENTIFIER(building)
R_PAREN
PLUS
IDENTIFIER(Building_GetW)
L_PAREN
IDENTIFIER(building)
R_PAREN
LESS_EQUAL
IDENTIFIER(Polygon_GetMaxX)
L_PAREN
IDENTIFIER(polygon)
R_PAREN
R_PAREN
IDENTIFIER(_executeEplgBuildings)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetRightChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(polygon)
COMMA
IDENTIFIER(txtFile)
COMMA
IDENTIFIER(type)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(bool)
IDENTIFIER(Query_Eplg)
L_PAREN
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(txtFile)
COMMA
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(outputFile)
COMMA
CHAR
MULTIPLY
IDENTIFIER(baseDir)
COMMA
CHAR
MULTIPLY
IDENTIFIER(arqPolig)
COMMA
CHAR
MULTIPLY
IDENTIFIER(type)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(polyFile)
ASSIGN
IDENTIFIER(openFile)
L_PAREN
IDENTIFIER(baseDir)
COMMA
IDENTIFIER(arqPolig)
COMMA
STRING(r)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(polyFile)
EQUAL
IDENTIFIER(NULL)
R_PAREN
RETURN
IDENTIFIER(false)
SEMICOLON
IDENTIFIER(Polygon)
IDENTIFIER(poly)
ASSIGN
IDENTIFIER(Polygon_Create)
L_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(Polygon_ReadFromFile)
L_PAREN
IDENTIFIER(poly)
COMMA
IDENTIFIER(polyFile)
R_PAREN
SEMICOLON
IDENTIFIER(fclose)
L_PAREN
IDENTIFIER(polyFile)
R_PAREN
SEMICOLON
IDENTIFIER(_executeEplgBlocks)
L_PAREN
IDENTIFIER(getBlockTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(RBTree_GetRoot)
L_PAREN
IDENTIFIER(getBlockTree)
L_PAREN
R_PAREN
R_PAREN
COMMA
IDENTIFIER(poly)
COMMA
IDENTIFIER(txtFile)
COMMA
IDENTIFIER(outputFile)
COMMA
IDENTIFIER(type)
R_PAREN
SEMICOLON
IDENTIFIER(_executeEplgBuildings)
L_PAREN
IDENTIFIER(getBuildingTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(RBTree_GetRoot)
L_PAREN
IDENTIFIER(getBuildingTree)
L_PAREN
R_PAREN
R_PAREN
COMMA
IDENTIFIER(poly)
COMMA
IDENTIFIER(txtFile)
COMMA
IDENTIFIER(type)
R_PAREN
SEMICOLON
IDENTIFIER(Polygon_Destroy)
L_PAREN
IDENTIFIER(poly)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(static)
VOID
IDENTIFIER(_executeCatacBlocks)
L_PAREN
IDENTIFIER(RBTree)
IDENTIFIER(tree)
COMMA
IDENTIFIER(Node)
IDENTIFIER(node)
COMMA
IDENTIFIER(Polygon)
IDENTIFIER(polygon)
COMMA
IDENTIFIER(ListNode)
MULTIPLY
MULTIPLY
IDENTIFIER(list)
R_PAREN
L_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(node)
EQUAL
IDENTIFIER(NULL)
R_PAREN
RETURN
SEMICOLON
IDENTIFIER(Block)
IDENTIFIER(block)
ASSIGN
IDENTIFIER(RBTreeN_GetValue)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(Block_GetX)
L_PAREN
IDENTIFIER(block)
R_PAREN
GREATER_EQUAL
IDENTIFIER(Polygon_GetMinX)
L_PAREN
IDENTIFIER(polygon)
R_PAREN
R_PAREN
IDENTIFIER(_executeCatacBlocks)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetLeftChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(polygon)
COMMA
IDENTIFIER(list)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(Polygon_IsBlockInside)
L_PAREN
IDENTIFIER(polygon)
COMMA
IDENTIFIER(block)
COMMA
IDENTIFIER(false)
R_PAREN
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(ListNode)
MULTIPLY
IDENTIFIER(node)
ASSIGN
IDENTIFIER(malloc)
L_PAREN
IDENTIFIER(sizeof)
L_PAREN
STRUCT
IDENTIFIER(list_node_t)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(node)
POINTER
IDENTIFIER(element)
ASSIGN
IDENTIFIER(block)
SEMICOLON
IDENTIFIER(node)
POINTER
IDENTIFIER(tree)
ASSIGN
IDENTIFIER(tree)
SEMICOLON
IDENTIFIER(node)
POINTER
IDENTIFIER(next)
ASSIGN
IDENTIFIER(NULL)
SEMICOLON
L_PAREN
MULTIPLY
IDENTIFIER(list)
R_PAREN
POINTER
IDENTIFIER(next)
ASSIGN
IDENTIFIER(node)
SEMICOLON
MULTIPLY
IDENTIFIER(list)
ASSIGN
IDENTIFIER(node)
SEMICOLON
R_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(Block_GetX)
L_PAREN
IDENTIFIER(block)
R_PAREN
LESS_EQUAL
IDENTIFIER(Polygon_GetMaxX)
L_PAREN
IDENTIFIER(polygon)
R_PAREN
PLUS
NUM_INTEGER(5)
error:lexical:1197:58: .
NUM_INTEGER(0)
R_PAREN
IDENTIFIER(_executeCatacBlocks)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetRightChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(polygon)
COMMA
IDENTIFIER(list)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(static)
VOID
IDENTIFIER(_executeCatacBuildings)
L_PAREN
IDENTIFIER(RBTree)
IDENTIFIER(tree)
COMMA
IDENTIFIER(Node)
IDENTIFIER(node)
COMMA
IDENTIFIER(Polygon)
IDENTIFIER(polygon)
COMMA
IDENTIFIER(ListNode)
MULTIPLY
MULTIPLY
IDENTIFIER(list)
R_PAREN
L_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(node)
EQUAL
IDENTIFIER(NULL)
R_PAREN
RETURN
SEMICOLON
IDENTIFIER(Building)
IDENTIFIER(building)
ASSIGN
IDENTIFIER(RBTreeN_GetValue)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(Building_GetX)
L_PAREN
IDENTIFIER(building)
R_PAREN
GREATER_EQUAL
IDENTIFIER(Polygon_GetMinX)
L_PAREN
IDENTIFIER(polygon)
R_PAREN
R_PAREN
IDENTIFIER(_executeCatacBuildings)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetLeftChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(polygon)
COMMA
IDENTIFIER(list)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(Polygon_IsBuildingInside)
L_PAREN
IDENTIFIER(polygon)
COMMA
IDENTIFIER(building)
R_PAREN
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(ListNode)
MULTIPLY
IDENTIFIER(node)
ASSIGN
IDENTIFIER(malloc)
L_PAREN
IDENTIFIER(sizeof)
L_PAREN
STRUCT
IDENTIFIER(list_node_t)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(node)
POINTER
IDENTIFIER(element)
ASSIGN
IDENTIFIER(building)
SEMICOLON
IDENTIFIER(node)
POINTER
IDENTIFIER(tree)
ASSIGN
IDENTIFIER(tree)
SEMICOLON
IDENTIFIER(node)
POINTER
IDENTIFIER(next)
ASSIGN
IDENTIFIER(NULL)
SEMICOLON
L_PAREN
MULTIPLY
IDENTIFIER(list)
R_PAREN
POINTER
IDENTIFIER(next)
ASSIGN
IDENTIFIER(node)
SEMICOLON
MULTIPLY
IDENTIFIER(list)
ASSIGN
IDENTIFIER(node)
SEMICOLON
R_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(Building_GetX)
L_PAREN
IDENTIFIER(building)
R_PAREN
LESS_EQUAL
IDENTIFIER(Polygon_GetMaxX)
L_PAREN
IDENTIFIER(polygon)
R_PAREN
R_PAREN
IDENTIFIER(_executeCatacBuildings)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetRightChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(polygon)
COMMA
IDENTIFIER(list)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(static)
VOID
IDENTIFIER(_executeCatacResidents)
L_PAREN
IDENTIFIER(RBTree)
IDENTIFIER(tree)
COMMA
IDENTIFIER(Node)
IDENTIFIER(node)
COMMA
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(txtFile)
COMMA
IDENTIFIER(bool)
IDENTIFIER(removeFromTrees)
R_PAREN
L_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(node)
EQUAL
IDENTIFIER(NULL)
R_PAREN
RETURN
SEMICOLON
IDENTIFIER(Person)
IDENTIFIER(person)
ASSIGN
IDENTIFIER(RBTreeN_GetValue)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
SEMICOLON
IDENTIFIER(_executeCatacResidents)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetLeftChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(txtFile)
COMMA
IDENTIFIER(removeFromTrees)
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(\t- Pessoa %s\n)
COMMA
IDENTIFIER(Person_GetCpf)
L_PAREN
IDENTIFIER(person)
R_PAREN
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(Person_GetBlock)
L_PAREN
IDENTIFIER(person)
R_PAREN
NOT_EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(removeFromTrees)
R_PAREN
IDENTIFIER(Block_RemoveResident)
L_PAREN
IDENTIFIER(Person_GetBlock)
L_PAREN
IDENTIFIER(person)
R_PAREN
COMMA
IDENTIFIER(person)
R_PAREN
SEMICOLON
IDENTIFIER(Person_SetBlock)
L_PAREN
IDENTIFIER(person)
COMMA
IDENTIFIER(NULL)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(Person_GetBuilding)
L_PAREN
IDENTIFIER(person)
R_PAREN
NOT_EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Person_SetBuilding)
L_PAREN
IDENTIFIER(person)
COMMA
IDENTIFIER(NULL)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(HashTable_Remove)
L_PAREN
IDENTIFIER(getPersonTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(Person_GetCpf)
L_PAREN
IDENTIFIER(person)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(Person_Destroy)
L_PAREN
IDENTIFIER(person)
R_PAREN
SEMICOLON
IDENTIFIER(_executeCatacResidents)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetRightChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(txtFile)
COMMA
IDENTIFIER(removeFromTrees)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(static)
VOID
IDENTIFIER(_executeCatacEquips)
L_PAREN
IDENTIFIER(RBTree)
IDENTIFIER(tree)
COMMA
IDENTIFIER(Node)
IDENTIFIER(node)
COMMA
IDENTIFIER(HashTable)
IDENTIFIER(table)
COMMA
IDENTIFIER(Polygon)
IDENTIFIER(polygon)
COMMA
IDENTIFIER(ListNode)
MULTIPLY
MULTIPLY
IDENTIFIER(list)
R_PAREN
L_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(node)
EQUAL
IDENTIFIER(NULL)
R_PAREN
RETURN
SEMICOLON
IDENTIFIER(Equip)
IDENTIFIER(equip)
ASSIGN
IDENTIFIER(RBTreeN_GetValue)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(Equip_GetX)
L_PAREN
IDENTIFIER(equip)
R_PAREN
GREATER_EQUAL
IDENTIFIER(Polygon_GetMinX)
L_PAREN
IDENTIFIER(polygon)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(_executeCatacEquips)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetLeftChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(table)
COMMA
IDENTIFIER(polygon)
COMMA
IDENTIFIER(list)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(Polygon_IsPointInside)
L_PAREN
IDENTIFIER(polygon)
COMMA
IDENTIFIER(Equip_GetX)
L_PAREN
IDENTIFIER(equip)
R_PAREN
COMMA
IDENTIFIER(Equip_GetY)
L_PAREN
IDENTIFIER(equip)
R_PAREN
R_PAREN
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(ListNode)
MULTIPLY
IDENTIFIER(node)
ASSIGN
IDENTIFIER(malloc)
L_PAREN
IDENTIFIER(sizeof)
L_PAREN
STRUCT
IDENTIFIER(list_node_t)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(node)
POINTER
IDENTIFIER(element)
ASSIGN
IDENTIFIER(equip)
SEMICOLON
IDENTIFIER(node)
POINTER
IDENTIFIER(tree)
ASSIGN
IDENTIFIER(tree)
SEMICOLON
IDENTIFIER(node)
POINTER
IDENTIFIER(table)
ASSIGN
IDENTIFIER(table)
SEMICOLON
IDENTIFIER(node)
POINTER
IDENTIFIER(next)
ASSIGN
IDENTIFIER(NULL)
SEMICOLON
L_PAREN
MULTIPLY
IDENTIFIER(list)
R_PAREN
POINTER
IDENTIFIER(next)
ASSIGN
IDENTIFIER(node)
SEMICOLON
MULTIPLY
IDENTIFIER(list)
ASSIGN
IDENTIFIER(node)
SEMICOLON
R_CURLY_BRACKET
IF
L_PAREN
IDENTIFIER(Equip_GetX)
L_PAREN
IDENTIFIER(equip)
R_PAREN
LESS_EQUAL
IDENTIFIER(Polygon_GetMaxX)
L_PAREN
IDENTIFIER(polygon)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(_executeCatacEquips)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(RBTreeN_GetRightChild)
L_PAREN
IDENTIFIER(tree)
COMMA
IDENTIFIER(node)
R_PAREN
COMMA
IDENTIFIER(table)
COMMA
IDENTIFIER(polygon)
COMMA
IDENTIFIER(list)
R_PAREN
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(bool)
IDENTIFIER(Query_Catac)
L_PAREN
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(outputFile)
COMMA
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(txtFile)
COMMA
CHAR
MULTIPLY
IDENTIFIER(baseDir)
COMMA
CHAR
MULTIPLY
IDENTIFIER(arqPolig)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(FILE)
MULTIPLY
IDENTIFIER(polyFile)
ASSIGN
IDENTIFIER(openFile)
L_PAREN
IDENTIFIER(baseDir)
COMMA
IDENTIFIER(arqPolig)
COMMA
STRING(r)
R_PAREN
SEMICOLON
IF
L_PAREN
IDENTIFIER(polyFile)
EQUAL
IDENTIFIER(NULL)
R_PAREN
RETURN
IDENTIFIER(false)
SEMICOLON
IDENTIFIER(Polygon)
IDENTIFIER(poly)
ASSIGN
IDENTIFIER(Polygon_Create)
L_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(Polygon_ReadFromFile)
L_PAREN
IDENTIFIER(poly)
COMMA
IDENTIFIER(polyFile)
R_PAREN
SEMICOLON
IDENTIFIER(fclose)
L_PAREN
IDENTIFIER(polyFile)
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(Itens removidos:\n)
R_PAREN
SEMICOLON
IDENTIFIER(ListNode)
MULTIPLY
IDENTIFIER(node)
ASSIGN
IDENTIFIER(malloc)
L_PAREN
IDENTIFIER(sizeof)
L_PAREN
STRUCT
IDENTIFIER(list_node_t)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(node)
POINTER
IDENTIFIER(next)
ASSIGN
IDENTIFIER(NULL)
SEMICOLON
IDENTIFIER(ListNode)
MULTIPLY
IDENTIFIER(nodeP)
ASSIGN
IDENTIFIER(node)
SEMICOLON
IDENTIFIER(_executeCatacBuildings)
L_PAREN
IDENTIFIER(getBuildingTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(RBTree_GetRoot)
L_PAREN
IDENTIFIER(getBuildingTree)
L_PAREN
R_PAREN
R_PAREN
COMMA
IDENTIFIER(poly)
COMMA
BITWISE_AND
IDENTIFIER(nodeP)
R_PAREN
SEMICOLON
IDENTIFIER(ListNode)
MULTIPLY
IDENTIFIER(next)
ASSIGN
IDENTIFIER(node)
POINTER
IDENTIFIER(next)
SEMICOLON
IDENTIFIER(free)
L_PAREN
IDENTIFIER(node)
R_PAREN
SEMICOLON
IDENTIFIER(node)
ASSIGN
IDENTIFIER(next)
SEMICOLON
WHILE
L_PAREN
IDENTIFIER(node)
NOT_EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Building)
IDENTIFIER(building)
ASSIGN
IDENTIFIER(node)
POINTER
IDENTIFIER(element)
SEMICOLON
IDENTIFIER(RBTree)
IDENTIFIER(residents)
ASSIGN
IDENTIFIER(Building_GetResidents)
L_PAREN
IDENTIFIER(building)
R_PAREN
SEMICOLON
IDENTIFIER(putSVGCross)
L_PAREN
IDENTIFIER(outputFile)
COMMA
IDENTIFIER(building)
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(outputFile)
COMMA
STRING(<text x=\"%lf\" y=\"%lf\" font-size=\"12\">%d</text>)
COMMA
IDENTIFIER(Building_GetX)
L_PAREN
IDENTIFIER(building)
R_PAREN
PLUS
IDENTIFIER(Building_GetW)
L_PAREN
IDENTIFIER(building)
R_PAREN
DIV
NUM_INTEGER(2)
COMMA
IDENTIFIER(Building_GetY)
L_PAREN
IDENTIFIER(building)
R_PAREN
PLUS
IDENTIFIER(Building_GetH)
L_PAREN
IDENTIFIER(building)
R_PAREN
DIV
NUM_INTEGER(2)
COMMA
IDENTIFIER(RBTree_GetLength)
L_PAREN
IDENTIFIER(residents)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(_executeCatacResidents)
L_PAREN
IDENTIFIER(residents)
COMMA
IDENTIFIER(RBTree_GetRoot)
L_PAREN
IDENTIFIER(residents)
R_PAREN
COMMA
IDENTIFIER(txtFile)
COMMA
IDENTIFIER(true)
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(\t- Prédio %s\n)
COMMA
IDENTIFIER(Building_GetKey)
L_PAREN
IDENTIFIER(building)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(RBTree_Remove)
L_PAREN
IDENTIFIER(getBuildingTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(Building_GetPoint)
L_PAREN
IDENTIFIER(building)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(RBTree_Remove)
L_PAREN
IDENTIFIER(Block_GetBuildings)
L_PAREN
IDENTIFIER(Building_GetBlock)
L_PAREN
IDENTIFIER(building)
R_PAREN
R_PAREN
COMMA
IDENTIFIER(Building_GetKey)
L_PAREN
IDENTIFIER(building)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(Building_Destroy)
L_PAREN
IDENTIFIER(building)
R_PAREN
SEMICOLON
IDENTIFIER(next)
ASSIGN
IDENTIFIER(node)
POINTER
IDENTIFIER(next)
SEMICOLON
IDENTIFIER(free)
L_PAREN
IDENTIFIER(node)
R_PAREN
SEMICOLON
IDENTIFIER(node)
ASSIGN
IDENTIFIER(next)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(node)
ASSIGN
IDENTIFIER(malloc)
L_PAREN
IDENTIFIER(sizeof)
L_PAREN
STRUCT
IDENTIFIER(list_node_t)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(node)
POINTER
IDENTIFIER(next)
ASSIGN
IDENTIFIER(NULL)
SEMICOLON
IDENTIFIER(nodeP)
ASSIGN
IDENTIFIER(node)
SEMICOLON
IDENTIFIER(_executeCatacBlocks)
L_PAREN
IDENTIFIER(getBlockTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(RBTree_GetRoot)
L_PAREN
IDENTIFIER(getBlockTree)
L_PAREN
R_PAREN
R_PAREN
COMMA
IDENTIFIER(poly)
COMMA
BITWISE_AND
IDENTIFIER(nodeP)
R_PAREN
SEMICOLON
IDENTIFIER(next)
ASSIGN
IDENTIFIER(node)
POINTER
IDENTIFIER(next)
SEMICOLON
IDENTIFIER(free)
L_PAREN
IDENTIFIER(node)
R_PAREN
SEMICOLON
IDENTIFIER(node)
ASSIGN
IDENTIFIER(next)
SEMICOLON
WHILE
L_PAREN
IDENTIFIER(node)
NOT_EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Block)
IDENTIFIER(block)
ASSIGN
IDENTIFIER(node)
POINTER
IDENTIFIER(element)
SEMICOLON
IDENTIFIER(RBTree)
IDENTIFIER(residents)
ASSIGN
IDENTIFIER(Block_GetResidents)
L_PAREN
IDENTIFIER(block)
R_PAREN
SEMICOLON
IDENTIFIER(_executeCatacResidents)
L_PAREN
IDENTIFIER(residents)
COMMA
IDENTIFIER(RBTree_GetRoot)
L_PAREN
IDENTIFIER(residents)
R_PAREN
COMMA
IDENTIFIER(txtFile)
COMMA
IDENTIFIER(false)
R_PAREN
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(\t- Quadra %s\n)
COMMA
IDENTIFIER(Block_GetCep)
L_PAREN
IDENTIFIER(block)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(RBTree_Remove)
L_PAREN
IDENTIFIER(getBlockTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(Block_GetPoint)
L_PAREN
IDENTIFIER(block)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(HashTable_Remove)
L_PAREN
IDENTIFIER(getBlockTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(Block_GetCep)
L_PAREN
IDENTIFIER(block)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(Block_Destroy)
L_PAREN
IDENTIFIER(block)
R_PAREN
SEMICOLON
IDENTIFIER(next)
ASSIGN
IDENTIFIER(node)
POINTER
IDENTIFIER(next)
SEMICOLON
IDENTIFIER(free)
L_PAREN
IDENTIFIER(node)
R_PAREN
SEMICOLON
IDENTIFIER(node)
ASSIGN
IDENTIFIER(next)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(node)
ASSIGN
IDENTIFIER(malloc)
L_PAREN
IDENTIFIER(sizeof)
L_PAREN
STRUCT
IDENTIFIER(list_node_t)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(node)
POINTER
IDENTIFIER(next)
ASSIGN
IDENTIFIER(NULL)
SEMICOLON
IDENTIFIER(nodeP)
ASSIGN
IDENTIFIER(node)
SEMICOLON
IDENTIFIER(_executeCatacEquips)
L_PAREN
IDENTIFIER(getHydTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(RBTree_GetRoot)
L_PAREN
IDENTIFIER(getHydTree)
L_PAREN
R_PAREN
R_PAREN
COMMA
IDENTIFIER(getHydTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(poly)
COMMA
BITWISE_AND
IDENTIFIER(nodeP)
R_PAREN
SEMICOLON
IDENTIFIER(_executeCatacEquips)
L_PAREN
IDENTIFIER(getCTowerTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(RBTree_GetRoot)
L_PAREN
IDENTIFIER(getCTowerTree)
L_PAREN
R_PAREN
R_PAREN
COMMA
IDENTIFIER(getCTowerTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(poly)
COMMA
BITWISE_AND
IDENTIFIER(nodeP)
R_PAREN
SEMICOLON
IDENTIFIER(_executeCatacEquips)
L_PAREN
IDENTIFIER(getTLightTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(RBTree_GetRoot)
L_PAREN
IDENTIFIER(getTLightTree)
L_PAREN
R_PAREN
R_PAREN
COMMA
IDENTIFIER(getTLightTable)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(poly)
COMMA
BITWISE_AND
IDENTIFIER(nodeP)
R_PAREN
SEMICOLON
IDENTIFIER(next)
ASSIGN
IDENTIFIER(node)
POINTER
IDENTIFIER(next)
SEMICOLON
IDENTIFIER(free)
L_PAREN
IDENTIFIER(node)
R_PAREN
SEMICOLON
IDENTIFIER(node)
ASSIGN
IDENTIFIER(next)
SEMICOLON
WHILE
L_PAREN
IDENTIFIER(node)
NOT_EQUAL
IDENTIFIER(NULL)
R_PAREN
L_CURLY_BRACKET
IDENTIFIER(Equip)
IDENTIFIER(equip)
ASSIGN
IDENTIFIER(node)
POINTER
IDENTIFIER(element)
SEMICOLON
IDENTIFIER(fprintf)
L_PAREN
IDENTIFIER(txtFile)
COMMA
STRING(\t- Equipamento %s\n)
COMMA
IDENTIFIER(Equip_GetID)
L_PAREN
IDENTIFIER(equip)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(RBTree_Remove)
L_PAREN
IDENTIFIER(node)
POINTER
IDENTIFIER(tree)
COMMA
IDENTIFIER(Equip_GetPoint)
L_PAREN
IDENTIFIER(equip)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(HashTable_Remove)
L_PAREN
IDENTIFIER(node)
POINTER
IDENTIFIER(table)
COMMA
IDENTIFIER(Equip_GetID)
L_PAREN
IDENTIFIER(equip)
R_PAREN
R_PAREN
SEMICOLON
IDENTIFIER(Equip_Destroy)
L_PAREN
IDENTIFIER(equip)
R_PAREN
SEMICOLON
IDENTIFIER(next)
ASSIGN
IDENTIFIER(node)
POINTER
IDENTIFIER(next)
SEMICOLON
IDENTIFIER(free)
L_PAREN
IDENTIFIER(node)
R_PAREN
SEMICOLON
IDENTIFIER(node)
ASSIGN
IDENTIFIER(next)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(putSVGPolygon)
L_PAREN
IDENTIFIER(outputFile)
COMMA
IDENTIFIER(poly)
COMMA
STRING(white)
R_PAREN
SEMICOLON
IDENTIFIER(Polygon_Destroy)
L_PAREN
IDENTIFIER(poly)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(bool)
IDENTIFIER(Query_Dmprbt)
L_PAREN
CHAR
MULTIPLY
IDENTIFIER(outputDir)
COMMA
CHAR
IDENTIFIER(t)
COMMA
CHAR
MULTIPLY
IDENTIFIER(arq)
R_PAREN
L_CURLY_BRACKET
CHAR
IDENTIFIER(description)
L_SQUARE_BRACKET
NUM_INTEGER(64)
R_SQUARE_BRACKET
SEMICOLON
SWITCH
L_PAREN
IDENTIFIER(t)
R_PAREN
L_CURLY_BRACKET
CASE
CHARACTER(q)
COLON
IDENTIFIER(putSVGRBTree)
L_PAREN
IDENTIFIER(file)
COMMA
IDENTIFIER(getBlockTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(Block_Describe)
R_PAREN
SEMICOLON
BREAK
SEMICOLON
CASE
CHARACTER(h)
COLON
IDENTIFIER(putSVGRBTree)
L_PAREN
IDENTIFIER(file)
COMMA
IDENTIFIER(getHydTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(Equip_Describe)
R_PAREN
SEMICOLON
BREAK
SEMICOLON
CASE
CHARACTER(s)
COLON
IDENTIFIER(putSVGRBTree)
L_PAREN
IDENTIFIER(file)
COMMA
IDENTIFIER(getTLightTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(Equip_Describe)
R_PAREN
SEMICOLON
BREAK
SEMICOLON
CASE
CHARACTER(t)
COLON
IDENTIFIER(putSVGRBTree)
L_PAREN
IDENTIFIER(file)
COMMA
IDENTIFIER(getCTowerTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(Equip_Describe)
R_PAREN
SEMICOLON
BREAK
SEMICOLON
CASE
CHARACTER(p)
COLON
IDENTIFIER(putSVGRBTree)
L_PAREN
IDENTIFIER(file)
COMMA
IDENTIFIER(getBuildingTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(Building_Describe)
R_PAREN
SEMICOLON
BREAK
SEMICOLON
CASE
CHARACTER(m)
COLON
IDENTIFIER(putSVGRBTree)
L_PAREN
IDENTIFIER(file)
COMMA
IDENTIFIER(getWallTree)
L_PAREN
R_PAREN
COMMA
IDENTIFIER(Wall_Describe)
R_PAREN
SEMICOLON
BREAK
SEMICOLON
DEFAULT
COLON
PRINTF
L_PAREN
STRING(Árvore inexistente: %c!\n)
COMMA
IDENTIFIER(t)
R_PAREN
SEMICOLON
IDENTIFIER(fclose)
L_PAREN
IDENTIFIER(file)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(false)
SEMICOLON
R_CURLY_BRACKET
IDENTIFIER(fclose)
L_PAREN
IDENTIFIER(file)
R_PAREN
SEMICOLON
RETURN
IDENTIFIER(true)
SEMICOLON
R_CURLY_BRACKET
error:lexical:1428:2: unterminated comment